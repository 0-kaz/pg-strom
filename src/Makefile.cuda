#
# Definitions for nvcc code build for PG-Strom
#

# standalone build?
ifeq ($(STROM_BUILD_ROOT),)
PG_CONFIG       ?= pg_config
endif

#
# Header and Libraries of CUDA
#
CUDA_PATH_LIST := /usr/local/cuda /usr/local/cuda-*
CUDA_PATH := $(shell for x in $(CUDA_PATH_LIST);    \
           do test -e "$$x/include/cuda.h" && echo $$x; done | head -1)
CUDA_IPATH := $(CUDA_PATH)/include
CUDA_BPATH := $(CUDA_PATH)/bin
CUDA_LPATH := $(CUDA_PATH)/lib64
NVCC       := $(CUDA_BPATH)/nvcc
NVCC_VERSION := $(shell $(NVCC) --version | grep ^Cuda | \
                  grep -o -E 'V[0-9\.]+$$' |             \
		  sed -e 's/V//g' -e 's/\./ /g' |        \
		  awk '{ print $$1 * 1000 + $$2 * 10; }')
# Max number of registers per GPU thread for PG-Strom modules
# (64k / 128 = up to 512 threads per SM)
MAXREGCOUNT := 128

# flags to build GPU libraries
__NVCC_FLAGS += -I $(shell $(PG_CONFIG) --includedir-server) \
                --maxrregcount=$(MAXREGCOUNT) \
                --source-in-ptx -lineinfo \
                -DHAVE_FLOAT2 \
                -Xnvlink --suppress-stack-size-warning \
                --gpu-architecture=native \
				--threads 4
# nvcc flags
NVCC_FLAGS = $(__NVCC_FLAGS) $(NVCC_FLAGS_CUSTOM)

# PG-Strom GPU Code
__CUDA_CORE_FILES = xpu_common cuda_gpuscan cuda_gpujoin cuda_gpupreagg \
                    xpu_basetype xpu_numeric xpu_timelib xpu_textlib \
                    xpu_misclib  xpu_jsonlib xpu_postgis
__CUDA_CORE_HEADERS = cuda_common.h xpu_common.h xpu_opcodes.h xpu_basetype.h \
                      xpu_numeric.h xpu_textlib.h xpu_timelib.h xpu_misclib.h \
                      xpu_jsonlib.h xpu_postgis.h
CUDA_OBJS = $(addsuffix .o, $(__CUDA_CORE_FILES) $(CUDA_CUSTOM_FILES))
CUDA_SRCS = $(addsuffix .cu,$(__CUDA_CORE_FILES) $(CUDA_CUSTOM_FILES))
CUDA_HEADERS = $(__CUDA_CORE_HEADERS) $(CUDA_CUSTOM_HEADERS)
CUDA_MD5SUM = $(shell cat $(CUDA_HEADERS) $(CUDA_SRCS) | md5sum | awk '{print $$1}')
CUDA_FATBIN = pgstrom-gpucode-V$(NVCC_VERSION)-$(CUDA_MD5SUM).fatbin
