---
--- Micro test cases for floating-point operators / functions
---
SET pg_strom.regression_test_mode = on;
SET client_min_messages = error;
DROP SCHEMA IF EXISTS regtest_dtype_float_temp CASCADE;
CREATE SCHEMA regtest_dtype_float_temp;
RESET client_min_messages;
SET search_path = regtest_dtype_float_temp,public;
CREATE TABLE rt_float (
  id   int,
  a    float2,
  b    float2,
  c    float4,
  d    float4,
  e    float8,
  f    float8,
  x    int2,
  y    int4,
  z    int8
);
SELECT pgstrom.random_setseed(20190609);
 random_setseed 
----------------
 
(1 row)

INSERT INTO rt_float (
  SELECT x, pgstrom.random_float(1,     -3200.0,     3200.0),
            pgstrom.random_float(1,     -3200.0,     3200.0),
            pgstrom.random_float(1,  -8000000.0,  8000000.0),
            pgstrom.random_float(1,  -8000000.0,  8000000.0),
            pgstrom.random_float(1, -80000000.0, 80000000.0),
            pgstrom.random_float(1, -80000000.0, 80000000.0),
            pgstrom.random_int(0,  -3200,  3200),
            pgstrom.random_int(0, -32000, 32000),
            pgstrom.random_int(0, -32000, 32000)
    FROM generate_series(1,2000) x);
ALTER TABLE rt_float ADD p int1;
UPDATE rt_float SET p=(id%256-128);
-- force to use GpuScan, instead of SeqScan
SET enable_seqscan = off;
-- not to print kernel source code
SET pg_strom.debug_kernel_source = off;
-- cast operators
SET pg_strom.enabled = on;
EXPLAIN (verbose, costs off)
SELECT id, (c/400.0)::float2 c, (e/4000.0)::float2 e,
       x::float2, y::float2, z::float2, p::float2
  INTO test01g
  FROM rt_float
 WHERE x BETWEEN -1800 AND 1800;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, (((c / '400'::double precision))::float2), (((e / '4000'::double precision))::float2), ((x)::float2), ((y)::float2), ((z)::float2), ((p)::float2)
   GPU Projection: id, ((c / '400'::double precision))::float2, ((e / '4000'::double precision))::float2, (x)::float2, (y)::float2, (z)::float2, (p)::float2
   GPU Scan Quals: ((x >= '-1800'::integer) AND (x <= 1800)) [rows: 4320 -> 22]
   KVars-Slot: <slot=0, type='int2', expr='x'>, <slot=1, type='int4', expr='id'>, <slot=2, type='float2', expr='((c / '400'::double precision))::float2'>, <slot=3, type='float4', expr='c'>, <slot=4, type='float2', expr='((e / '4000'::double precision))::float2'>, <slot=5, type='float8', expr='e'>, <slot=6, type='float2', expr='(x)::float2'>, <slot=7, type='float2', expr='(y)::float2'>, <slot=8, type='int4', expr='y'>, <slot=9, type='float2', expr='(z)::float2'>, <slot=10, type='int8', expr='z'>, <slot=11, type='float2', expr='(p)::float2'>, <slot=12, type='int1', expr='p'>
   KVecs-Buffer: nbytes: 77824, ndims: 2, items=[kvec0=<0x0000-17ff, type='int2', expr='x'>, kvec1=<0x1800-3fff, type='int4', expr='id'>, kvec2=<0x4000-67ff, type='float4', expr='c'>, kvec3=<0x6800-afff, type='float8', expr='e'>, kvec4=<0xb000-d7ff, type='int4', expr='y'>, kvec5=<0xd800-11fff, type='int8', expr='z'>, kvec6=<0x12000-12fff, type='int1', expr='p'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=1, type='int4' resno=1(id)>, <slot=3, type='float4' resno=4(c)>, <slot=5, type='float8' resno=6(e)>, <slot=0, type='int2' resno=8(x)>, <slot=8, type='int4' resno=9(y)>, <slot=10, type='int8' resno=10(z)>, <slot=12, type='int1' resno=11(p)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-17ff, type='int2', expr='x'>, <slot=1, offset=0x1800-3fff, type='int4', expr='id'>, <slot=3, offset=0x4000-67ff, type='float4', expr='c'>, <slot=5, offset=0x6800-afff, type='float8', expr='e'>, <slot=8, offset=0xb000-d7ff, type='int4', expr='y'>, <slot=10, offset=0xd800-11fff, type='int8', expr='z'>, <slot=12, offset=0x12000-12fff, type='int1', expr='p'>]}}}
   Scan Quals OpCode: {Bool::AND args=[{Func(bool)::int24ge args=[{Var(int2): slot=0, expr='x'}, {Const(int4): value='-1800'}]}, {Func(bool)::int24le args=[{Var(int2): slot=0, expr='x'}, {Const(int4): value='1800'}]}]}
   Projection OpCode: {Projection: layout=<1,2,4,6,7,9,11> args=[{SaveExpr: <slot=1, type='int4'> arg={Var(int4): kvec=0x1800-4000, expr='id'}}, {SaveExpr: <slot=2, type='float2'> arg={Func(float2)::float2 arg={Func(float8)::float48div args=[{Var(float4): kvec=0x4000-6800, expr='c'}, {Const(float8): value='400'}]}}}, {SaveExpr: <slot=4, type='float2'> arg={Func(float2)::float2 arg={Func(float8)::float8div args=[{Var(float8): kvec=0x6800-b000, expr='e'}, {Const(float8): value='4000'}]}}}, {SaveExpr: <slot=6, type='float2'> arg={Func(float2)::float2 arg={Var(int2): kvec=0x0000-1800, expr='x'}}}, {SaveExpr: <slot=7, type='float2'> arg={Func(float2)::float2 arg={Var(int4): kvec=0xb000-d800, expr='y'}}}, {SaveExpr: <slot=9, type='float2'> arg={Func(float2)::float2 arg={Var(int8): kvec=0xd800-12000, expr='z'}}}, {SaveExpr: <slot=11, type='float2'> arg={Func(float2)::float2 arg={Var(int1): kvec=0x12000-13000, expr='p'}}}]}
(10 rows)

SELECT id, (c/400.0)::float2 c, (e/4000.0)::float2 e,
       x::float2, y::float2, z::float2, p::float2
  INTO test01g
  FROM rt_float
 WHERE x BETWEEN -1800 AND 1800;
SET pg_strom.enabled = off;
SELECT id, (c/400.0)::float2 c, (e/4000.0)::float2 e,
       x::float2, y::float2, z::float2, p::float2
  INTO test01p
  FROM rt_float
 WHERE x BETWEEN -1800 AND 1800;
(SELECT * FROM test01g EXCEPT ALL SELECT * FROM test01p) ORDER BY id;
 id | c | e | x | y | z | p 
----+---+---+---+---+---+---
(0 rows)

(SELECT * FROM test01p EXCEPT ALL SELECT * FROM test01g) ORDER BY id;
 id | c | e | x | y | z | p 
----+---+---+---+---+---+---
(0 rows)

SET pg_strom.enabled = on;
EXPLAIN (verbose, costs off)
SELECT id, a::float4, e::float4, x::float4, y::float4, z::float4, p::float4
  INTO test02g
  FROM rt_float
 WHERE x < 0;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a)::real), ((e)::real), ((x)::real), ((y)::real), ((z)::real), ((p)::real)
   GPU Projection: id, (a)::real, (e)::real, (x)::real, (y)::real, (z)::real, (p)::real
   GPU Scan Quals: (x < 0) [rows: 4320 -> 1440]
   KVars-Slot: <slot=0, type='int2', expr='x'>, <slot=1, type='int4', expr='id'>, <slot=2, type='float4', expr='(a)::real'>, <slot=3, type='float2', expr='a'>, <slot=4, type='float4', expr='(e)::real'>, <slot=5, type='float8', expr='e'>, <slot=6, type='float4', expr='(x)::real'>, <slot=7, type='float4', expr='(y)::real'>, <slot=8, type='int4', expr='y'>, <slot=9, type='float4', expr='(z)::real'>, <slot=10, type='int8', expr='z'>, <slot=11, type='float4', expr='(p)::real'>, <slot=12, type='int1', expr='p'>
   KVecs-Buffer: nbytes: 73728, ndims: 2, items=[kvec0=<0x0000-17ff, type='int2', expr='x'>, kvec1=<0x1800-3fff, type='int4', expr='id'>, kvec2=<0x4000-57ff, type='float2', expr='a'>, kvec3=<0x5800-9fff, type='float8', expr='e'>, kvec4=<0xa000-c7ff, type='int4', expr='y'>, kvec5=<0xc800-10fff, type='int8', expr='z'>, kvec6=<0x11000-11fff, type='int1', expr='p'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=1, type='int4' resno=1(id)>, <slot=3, type='float2' resno=2(a)>, <slot=5, type='float8' resno=6(e)>, <slot=0, type='int2' resno=8(x)>, <slot=8, type='int4' resno=9(y)>, <slot=10, type='int8' resno=10(z)>, <slot=12, type='int1' resno=11(p)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-17ff, type='int2', expr='x'>, <slot=1, offset=0x1800-3fff, type='int4', expr='id'>, <slot=3, offset=0x4000-57ff, type='float2', expr='a'>, <slot=5, offset=0x5800-9fff, type='float8', expr='e'>, <slot=8, offset=0xa000-c7ff, type='int4', expr='y'>, <slot=10, offset=0xc800-10fff, type='int8', expr='z'>, <slot=12, offset=0x11000-11fff, type='int1', expr='p'>]}}}
   Scan Quals OpCode: {Func(bool)::int24lt args=[{Var(int2): slot=0, expr='x'}, {Const(int4): value='0'}]}
   Projection OpCode: {Projection: layout=<1,2,4,6,7,9,11> args=[{SaveExpr: <slot=1, type='int4'> arg={Var(int4): kvec=0x1800-4000, expr='id'}}, {SaveExpr: <slot=2, type='float4'> arg={Func(float4)::float4 arg={Var(float2): kvec=0x4000-5800, expr='a'}}}, {SaveExpr: <slot=4, type='float4'> arg={Func(float4)::float4 arg={Var(float8): kvec=0x5800-a000, expr='e'}}}, {SaveExpr: <slot=6, type='float4'> arg={Func(float4)::float4 arg={Var(int2): kvec=0x0000-1800, expr='x'}}}, {SaveExpr: <slot=7, type='float4'> arg={Func(float4)::float4 arg={Var(int4): kvec=0xa000-c800, expr='y'}}}, {SaveExpr: <slot=9, type='float4'> arg={Func(float4)::float4 arg={Var(int8): kvec=0xc800-11000, expr='z'}}}, {SaveExpr: <slot=11, type='float4'> arg={Func(float4)::float4 arg={Var(int1): kvec=0x11000-12000, expr='p'}}}]}
(10 rows)

SELECT id, a::float4, e::float4, x::float4, y::float4, z::float4, p::float4
  INTO test02g
  FROM rt_float
 WHERE x < 0;
SET pg_strom.enabled = off;
SELECT id, a::float4, e::float4, x::float4, y::float4, z::float4, p::float4
  INTO test02p
  FROM rt_float
 WHERE x < 0;
(SELECT * FROM test02g EXCEPT ALL SELECT * FROM test02p) ORDER BY id;
 id | a | e | x | y | z | p 
----+---+---+---+---+---+---
(0 rows)

(SELECT * FROM test02p EXCEPT ALL SELECT * FROM test02g) ORDER BY id;
 id | a | e | x | y | z | p 
----+---+---+---+---+---+---
(0 rows)

SET pg_strom.enabled = on;
EXPLAIN (verbose, costs off)
SELECT id, a::float8, c::float8, x::float8, y::float8, z::float8, p::float8
  INTO test03g
  FROM rt_float
 WHERE x > 0;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a)::double precision), ((c)::double precision), ((x)::double precision), ((y)::double precision), ((z)::double precision), ((p)::double precision)
   GPU Projection: id, (a)::double precision, (c)::double precision, (x)::double precision, (y)::double precision, (z)::double precision, (p)::double precision
   GPU Scan Quals: (x > 0) [rows: 4320 -> 1440]
   KVars-Slot: <slot=0, type='int2', expr='x'>, <slot=1, type='int4', expr='id'>, <slot=2, type='float8', expr='(a)::double precision'>, <slot=3, type='float2', expr='a'>, <slot=4, type='float8', expr='(c)::double precision'>, <slot=5, type='float4', expr='c'>, <slot=6, type='float8', expr='(x)::double precision'>, <slot=7, type='float8', expr='(y)::double precision'>, <slot=8, type='int4', expr='y'>, <slot=9, type='float8', expr='(z)::double precision'>, <slot=10, type='int8', expr='z'>, <slot=11, type='float8', expr='(p)::double precision'>, <slot=12, type='int1', expr='p'>
   KVecs-Buffer: nbytes: 65536, ndims: 2, items=[kvec0=<0x0000-17ff, type='int2', expr='x'>, kvec1=<0x1800-3fff, type='int4', expr='id'>, kvec2=<0x4000-57ff, type='float2', expr='a'>, kvec3=<0x5800-7fff, type='float4', expr='c'>, kvec4=<0x8000-a7ff, type='int4', expr='y'>, kvec5=<0xa800-efff, type='int8', expr='z'>, kvec6=<0xf000-ffff, type='int1', expr='p'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=1, type='int4' resno=1(id)>, <slot=3, type='float2' resno=2(a)>, <slot=5, type='float4' resno=4(c)>, <slot=0, type='int2' resno=8(x)>, <slot=8, type='int4' resno=9(y)>, <slot=10, type='int8' resno=10(z)>, <slot=12, type='int1' resno=11(p)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-17ff, type='int2', expr='x'>, <slot=1, offset=0x1800-3fff, type='int4', expr='id'>, <slot=3, offset=0x4000-57ff, type='float2', expr='a'>, <slot=5, offset=0x5800-7fff, type='float4', expr='c'>, <slot=8, offset=0x8000-a7ff, type='int4', expr='y'>, <slot=10, offset=0xa800-efff, type='int8', expr='z'>, <slot=12, offset=0xf000-ffff, type='int1', expr='p'>]}}}
   Scan Quals OpCode: {Func(bool)::int24gt args=[{Var(int2): slot=0, expr='x'}, {Const(int4): value='0'}]}
   Projection OpCode: {Projection: layout=<1,2,4,6,7,9,11> args=[{SaveExpr: <slot=1, type='int4'> arg={Var(int4): kvec=0x1800-4000, expr='id'}}, {SaveExpr: <slot=2, type='float8'> arg={Func(float8)::float8 arg={Var(float2): kvec=0x4000-5800, expr='a'}}}, {SaveExpr: <slot=4, type='float8'> arg={Func(float8)::float8 arg={Var(float4): kvec=0x5800-8000, expr='c'}}}, {SaveExpr: <slot=6, type='float8'> arg={Func(float8)::float8 arg={Var(int2): kvec=0x0000-1800, expr='x'}}}, {SaveExpr: <slot=7, type='float8'> arg={Func(float8)::float8 arg={Var(int4): kvec=0x8000-a800, expr='y'}}}, {SaveExpr: <slot=9, type='float8'> arg={Func(float8)::float8 arg={Var(int8): kvec=0xa800-f000, expr='z'}}}, {SaveExpr: <slot=11, type='float8'> arg={Func(float8)::float8 arg={Var(int1): kvec=0xf000-10000, expr='p'}}}]}
(10 rows)

SELECT id, a::float8, c::float8, x::float8, y::float8, z::float8, p::float8
  INTO test03g
  FROM rt_float
 WHERE x > 0;
SET pg_strom.enabled = off;
SELECT id, a::float8, c::float8, x::float8, y::float8, z::float8, p::float8
  INTO test03p
  FROM rt_float
 WHERE x > 0;
(SELECT * FROM test03g EXCEPT ALL SELECT * FROM test03p) ORDER BY id;
 id | a | c | x | y | z | p 
----+---+---+---+---+---+---
(0 rows)

(SELECT * FROM test03p EXCEPT ALL SELECT * FROM test03g) ORDER BY id;
 id | a | c | x | y | z | p 
----+---+---+---+---+---+---
(0 rows)

-- '+' operators
SET pg_strom.enabled = on;
EXPLAIN (verbose, costs off)
SELECT id, a+b v1, a+c v2, a+e v3,
           c+b v4, c+d v5, c+e v6,
           e+b v7, e+d v8, e+f v9
  INTO test10g
  FROM rt_float
 WHERE y BETWEEN -16000 AND 16000;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a + b)), ((a + c)), ((a + e)), ((c + b)), ((c + d)), ((c + e)), ((e + b)), ((e + d)), ((e + f))
   GPU Projection: id, (a + b), (a + c), (a + e), (c + b), (c + d), (c + e), (e + b), (e + d), (e + f)
   GPU Scan Quals: ((y >= '-16000'::integer) AND (y <= 16000)) [rows: 4320 -> 22]
   KVars-Slot: <slot=0, type='int4', expr='y'>, <slot=1, type='int4', expr='id'>, <slot=2, type='float4', expr='(a + b)'>, <slot=3, type='float2', expr='a'>, <slot=4, type='float2', expr='b'>, <slot=5, type='float4', expr='(a + c)'>, <slot=6, type='float4', expr='c'>, <slot=7, type='float8', expr='(a + e)'>, <slot=8, type='float8', expr='e'>, <slot=9, type='float4', expr='(c + b)'>, <slot=10, type='float4', expr='(c + d)'>, <slot=11, type='float4', expr='d'>, <slot=12, type='float8', expr='(c + e)'>, <slot=13, type='float8', expr='(e + b)'>, <slot=14, type='float8', expr='(e + d)'>, <slot=15, type='float8', expr='(e + f)'>, <slot=16, type='float8', expr='f'>
   KVecs-Buffer: nbytes: 90112, ndims: 2, items=[kvec0=<0x0000-27ff, type='int4', expr='y'>, kvec1=<0x2800-4fff, type='int4', expr='id'>, kvec2=<0x5000-67ff, type='float2', expr='a'>, kvec3=<0x6800-7fff, type='float2', expr='b'>, kvec4=<0x8000-a7ff, type='float4', expr='c'>, kvec5=<0xa800-efff, type='float8', expr='e'>, kvec6=<0xf000-117ff, type='float4', expr='d'>, kvec7=<0x11800-15fff, type='float8', expr='f'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=1, type='int4' resno=1(id)>, <slot=3, type='float2' resno=2(a)>, <slot=4, type='float2' resno=3(b)>, <slot=6, type='float4' resno=4(c)>, <slot=11, type='float4' resno=5(d)>, <slot=8, type='float8' resno=6(e)>, <slot=16, type='float8' resno=7(f)>, <slot=0, type='int4' resno=9(y)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=1, offset=0x2800-4fff, type='int4', expr='id'>, <slot=3, offset=0x5000-67ff, type='float2', expr='a'>, <slot=4, offset=0x6800-7fff, type='float2', expr='b'>, <slot=6, offset=0x8000-a7ff, type='float4', expr='c'>, <slot=8, offset=0xa800-efff, type='float8', expr='e'>, <slot=11, offset=0xf000-117ff, type='float4', expr='d'>, <slot=16, offset=0x11800-15fff, type='float8', expr='f'>]}}}
   Scan Quals OpCode: {Bool::AND args=[{Func(bool)::int4ge args=[{Var(int4): slot=0, expr='y'}, {Const(int4): value='-16000'}]}, {Func(bool)::int4le args=[{Var(int4): slot=0, expr='y'}, {Const(int4): value='16000'}]}]}
   Projection OpCode: {Projection: layout=<1,2,5,7,9,10,12,13,14,15> args=[{SaveExpr: <slot=1, type='int4'> arg={Var(int4): kvec=0x2800-5000, expr='id'}}, {SaveExpr: <slot=2, type='float4'> arg={Func(float4)::float2pl args=[{Var(float2): kvec=0x5000-6800, expr='a'}, {Var(float2): kvec=0x6800-8000, expr='b'}]}}, {SaveExpr: <slot=5, type='float4'> arg={Func(float4)::float24pl args=[{Var(float2): kvec=0x5000-6800, expr='a'}, {Var(float4): kvec=0x8000-a800, expr='c'}]}}, {SaveExpr: <slot=7, type='float8'> arg={Func(float8)::float28pl args=[{Var(float2): kvec=0x5000-6800, expr='a'}, {Var(float8): kvec=0xa800-f000, expr='e'}]}}, {SaveExpr: <slot=9, type='float4'> arg={Func(float4)::float42pl args=[{Var(float4): kvec=0x8000-a800, expr='c'}, {Var(float2): kvec=0x6800-8000, expr='b'}]}}, {SaveExpr: <slot=10, type='float4'> arg={Func(float4)::float4pl args=[{Var(float4): kvec=0x8000-a800, expr='c'}, {Var(float4): kvec=0xf000-11800, expr='d'}]}}, {SaveExpr: <slot=12, type='float8'> arg={Func(float8)::float48pl args=[{Var(float4): kvec=0x8000-a800, expr='c'}, {Var(float8): kvec=0xa800-f000, expr='e'}]}}, {SaveExpr: <slot=13, type='float8'> arg={Func(float8)::float82pl args=[{Var(float8): kvec=0xa800-f000, expr='e'}, {Var(float2): kvec=0x6800-8000, expr='b'}]}}, {SaveExpr: <slot=14, type='float8'> arg={Func(float8)::float84pl args=[{Var(float8): kvec=0xa800-f000, expr='e'}, {Var(float4): kvec=0xf000-11800, expr='d'}]}}, {SaveExpr: <slot=15, type='float8'> arg={Func(float8)::float8pl args=[{Var(float8): kvec=0xa800-f000, expr='e'}, {Var(float8): kvec=0x11800-16000, expr='f'}]}}]}
(10 rows)

SELECT id, a+b v1, a+c v2, a+e v3,
           c+b v4, c+d v5, c+e v6,
           e+b v7, e+d v8, e+f v9
  INTO test10g
  FROM rt_float
 WHERE y BETWEEN -16000 AND 16000;
SET pg_strom.enabled = off;
SELECT id, a+b v1, a+c v2, a+e v3,
           c+b v4, c+d v5, c+e v6,
           e+b v7, e+d v8, e+f v9
  INTO test10p
  FROM rt_float
 WHERE y BETWEEN -16000 AND 16000;
(SELECT * FROM test10g EXCEPT ALL SELECT * FROM test10p) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

(SELECT * FROM test10p EXCEPT ALL SELECT * FROM test10g) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

-- '-' operators
SET pg_strom.enabled = on;
EXPLAIN (verbose, costs off)
SELECT id, a-b v1, a-c v2, a-e v3,
           c-b v4, c-d v5, c-e v6,
           e-b v7, e-d v8, e-f v9
  INTO test11g
  FROM rt_float
 WHERE y < 0;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a - b)), ((a - c)), ((a - e)), ((c - b)), ((c - d)), ((c - e)), ((e - b)), ((e - d)), ((e - f))
   GPU Projection: id, (a - b), (a - c), (a - e), (c - b), (c - d), (c - e), (e - b), (e - d), (e - f)
   GPU Scan Quals: (y < 0) [rows: 4320 -> 1440]
   KVars-Slot: <slot=0, type='int4', expr='y'>, <slot=1, type='int4', expr='id'>, <slot=2, type='float4', expr='(a - b)'>, <slot=3, type='float2', expr='a'>, <slot=4, type='float2', expr='b'>, <slot=5, type='float4', expr='(a - c)'>, <slot=6, type='float4', expr='c'>, <slot=7, type='float8', expr='(a - e)'>, <slot=8, type='float8', expr='e'>, <slot=9, type='float4', expr='(c - b)'>, <slot=10, type='float4', expr='(c - d)'>, <slot=11, type='float4', expr='d'>, <slot=12, type='float8', expr='(c - e)'>, <slot=13, type='float8', expr='(e - b)'>, <slot=14, type='float8', expr='(e - d)'>, <slot=15, type='float8', expr='(e - f)'>, <slot=16, type='float8', expr='f'>
   KVecs-Buffer: nbytes: 90112, ndims: 2, items=[kvec0=<0x0000-27ff, type='int4', expr='y'>, kvec1=<0x2800-4fff, type='int4', expr='id'>, kvec2=<0x5000-67ff, type='float2', expr='a'>, kvec3=<0x6800-7fff, type='float2', expr='b'>, kvec4=<0x8000-a7ff, type='float4', expr='c'>, kvec5=<0xa800-efff, type='float8', expr='e'>, kvec6=<0xf000-117ff, type='float4', expr='d'>, kvec7=<0x11800-15fff, type='float8', expr='f'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=1, type='int4' resno=1(id)>, <slot=3, type='float2' resno=2(a)>, <slot=4, type='float2' resno=3(b)>, <slot=6, type='float4' resno=4(c)>, <slot=11, type='float4' resno=5(d)>, <slot=8, type='float8' resno=6(e)>, <slot=16, type='float8' resno=7(f)>, <slot=0, type='int4' resno=9(y)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=1, offset=0x2800-4fff, type='int4', expr='id'>, <slot=3, offset=0x5000-67ff, type='float2', expr='a'>, <slot=4, offset=0x6800-7fff, type='float2', expr='b'>, <slot=6, offset=0x8000-a7ff, type='float4', expr='c'>, <slot=8, offset=0xa800-efff, type='float8', expr='e'>, <slot=11, offset=0xf000-117ff, type='float4', expr='d'>, <slot=16, offset=0x11800-15fff, type='float8', expr='f'>]}}}
   Scan Quals OpCode: {Func(bool)::int4lt args=[{Var(int4): slot=0, expr='y'}, {Const(int4): value='0'}]}
   Projection OpCode: {Projection: layout=<1,2,5,7,9,10,12,13,14,15> args=[{SaveExpr: <slot=1, type='int4'> arg={Var(int4): kvec=0x2800-5000, expr='id'}}, {SaveExpr: <slot=2, type='float4'> arg={Func(float4)::float2mi args=[{Var(float2): kvec=0x5000-6800, expr='a'}, {Var(float2): kvec=0x6800-8000, expr='b'}]}}, {SaveExpr: <slot=5, type='float4'> arg={Func(float4)::float24mi args=[{Var(float2): kvec=0x5000-6800, expr='a'}, {Var(float4): kvec=0x8000-a800, expr='c'}]}}, {SaveExpr: <slot=7, type='float8'> arg={Func(float8)::float28mi args=[{Var(float2): kvec=0x5000-6800, expr='a'}, {Var(float8): kvec=0xa800-f000, expr='e'}]}}, {SaveExpr: <slot=9, type='float4'> arg={Func(float4)::float42mi args=[{Var(float4): kvec=0x8000-a800, expr='c'}, {Var(float2): kvec=0x6800-8000, expr='b'}]}}, {SaveExpr: <slot=10, type='float4'> arg={Func(float4)::float4mi args=[{Var(float4): kvec=0x8000-a800, expr='c'}, {Var(float4): kvec=0xf000-11800, expr='d'}]}}, {SaveExpr: <slot=12, type='float8'> arg={Func(float8)::float48mi args=[{Var(float4): kvec=0x8000-a800, expr='c'}, {Var(float8): kvec=0xa800-f000, expr='e'}]}}, {SaveExpr: <slot=13, type='float8'> arg={Func(float8)::float82mi args=[{Var(float8): kvec=0xa800-f000, expr='e'}, {Var(float2): kvec=0x6800-8000, expr='b'}]}}, {SaveExpr: <slot=14, type='float8'> arg={Func(float8)::float84mi args=[{Var(float8): kvec=0xa800-f000, expr='e'}, {Var(float4): kvec=0xf000-11800, expr='d'}]}}, {SaveExpr: <slot=15, type='float8'> arg={Func(float8)::float8mi args=[{Var(float8): kvec=0xa800-f000, expr='e'}, {Var(float8): kvec=0x11800-16000, expr='f'}]}}]}
(10 rows)

SELECT id, a-b v1, a-c v2, a-e v3,
           c-b v4, c-d v5, c-e v6,
           e-b v7, e-d v8, e-f v9
  INTO test11g
  FROM rt_float
 WHERE y < 0;
SET pg_strom.enabled = off;
SELECT id, a-b v1, a-c v2, a-e v3,
           c-b v4, c-d v5, c-e v6,
           e-b v7, e-d v8, e-f v9
  INTO test11p
  FROM rt_float
 WHERE y < 0;
(SELECT * FROM test11g EXCEPT ALL SELECT * FROM test11p) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

(SELECT * FROM test11p EXCEPT ALL SELECT * FROM test11g) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

-- '*' operators
SET pg_strom.enabled = on;
EXPLAIN (verbose, costs off)
SELECT id, a*b v1, a*c v2, a*e v3,
           c*b v4, c*d v5, c*e v6,
           e*b v7, e*d v8, e*f v9
  INTO test12g
  FROM rt_float
 WHERE y > 0;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a * b)), ((a * c)), ((a * e)), ((c * b)), ((c * d)), ((c * e)), ((e * b)), ((e * d)), ((e * f))
   GPU Projection: id, (a * b), (a * c), (a * e), (c * b), (c * d), (c * e), (e * b), (e * d), (e * f)
   GPU Scan Quals: (y > 0) [rows: 4320 -> 1440]
   KVars-Slot: <slot=0, type='int4', expr='y'>, <slot=1, type='int4', expr='id'>, <slot=2, type='float4', expr='(a * b)'>, <slot=3, type='float2', expr='a'>, <slot=4, type='float2', expr='b'>, <slot=5, type='float4', expr='(a * c)'>, <slot=6, type='float4', expr='c'>, <slot=7, type='float8', expr='(a * e)'>, <slot=8, type='float8', expr='e'>, <slot=9, type='float4', expr='(c * b)'>, <slot=10, type='float4', expr='(c * d)'>, <slot=11, type='float4', expr='d'>, <slot=12, type='float8', expr='(c * e)'>, <slot=13, type='float8', expr='(e * b)'>, <slot=14, type='float8', expr='(e * d)'>, <slot=15, type='float8', expr='(e * f)'>, <slot=16, type='float8', expr='f'>
   KVecs-Buffer: nbytes: 90112, ndims: 2, items=[kvec0=<0x0000-27ff, type='int4', expr='y'>, kvec1=<0x2800-4fff, type='int4', expr='id'>, kvec2=<0x5000-67ff, type='float2', expr='a'>, kvec3=<0x6800-7fff, type='float2', expr='b'>, kvec4=<0x8000-a7ff, type='float4', expr='c'>, kvec5=<0xa800-efff, type='float8', expr='e'>, kvec6=<0xf000-117ff, type='float4', expr='d'>, kvec7=<0x11800-15fff, type='float8', expr='f'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=1, type='int4' resno=1(id)>, <slot=3, type='float2' resno=2(a)>, <slot=4, type='float2' resno=3(b)>, <slot=6, type='float4' resno=4(c)>, <slot=11, type='float4' resno=5(d)>, <slot=8, type='float8' resno=6(e)>, <slot=16, type='float8' resno=7(f)>, <slot=0, type='int4' resno=9(y)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=1, offset=0x2800-4fff, type='int4', expr='id'>, <slot=3, offset=0x5000-67ff, type='float2', expr='a'>, <slot=4, offset=0x6800-7fff, type='float2', expr='b'>, <slot=6, offset=0x8000-a7ff, type='float4', expr='c'>, <slot=8, offset=0xa800-efff, type='float8', expr='e'>, <slot=11, offset=0xf000-117ff, type='float4', expr='d'>, <slot=16, offset=0x11800-15fff, type='float8', expr='f'>]}}}
   Scan Quals OpCode: {Func(bool)::int4gt args=[{Var(int4): slot=0, expr='y'}, {Const(int4): value='0'}]}
   Projection OpCode: {Projection: layout=<1,2,5,7,9,10,12,13,14,15> args=[{SaveExpr: <slot=1, type='int4'> arg={Var(int4): kvec=0x2800-5000, expr='id'}}, {SaveExpr: <slot=2, type='float4'> arg={Func(float4)::float2mul args=[{Var(float2): kvec=0x5000-6800, expr='a'}, {Var(float2): kvec=0x6800-8000, expr='b'}]}}, {SaveExpr: <slot=5, type='float4'> arg={Func(float4)::float24mul args=[{Var(float2): kvec=0x5000-6800, expr='a'}, {Var(float4): kvec=0x8000-a800, expr='c'}]}}, {SaveExpr: <slot=7, type='float8'> arg={Func(float8)::float28mul args=[{Var(float2): kvec=0x5000-6800, expr='a'}, {Var(float8): kvec=0xa800-f000, expr='e'}]}}, {SaveExpr: <slot=9, type='float4'> arg={Func(float4)::float42mul args=[{Var(float4): kvec=0x8000-a800, expr='c'}, {Var(float2): kvec=0x6800-8000, expr='b'}]}}, {SaveExpr: <slot=10, type='float4'> arg={Func(float4)::float4mul args=[{Var(float4): kvec=0x8000-a800, expr='c'}, {Var(float4): kvec=0xf000-11800, expr='d'}]}}, {SaveExpr: <slot=12, type='float8'> arg={Func(float8)::float48mul args=[{Var(float4): kvec=0x8000-a800, expr='c'}, {Var(float8): kvec=0xa800-f000, expr='e'}]}}, {SaveExpr: <slot=13, type='float8'> arg={Func(float8)::float82mul args=[{Var(float8): kvec=0xa800-f000, expr='e'}, {Var(float2): kvec=0x6800-8000, expr='b'}]}}, {SaveExpr: <slot=14, type='float8'> arg={Func(float8)::float84mul args=[{Var(float8): kvec=0xa800-f000, expr='e'}, {Var(float4): kvec=0xf000-11800, expr='d'}]}}, {SaveExpr: <slot=15, type='float8'> arg={Func(float8)::float8mul args=[{Var(float8): kvec=0xa800-f000, expr='e'}, {Var(float8): kvec=0x11800-16000, expr='f'}]}}]}
(10 rows)

SELECT id, a*b v1, a*c v2, a*e v3,
           c*b v4, c*d v5, c*e v6,
           e*b v7, e*d v8, e*f v9
  INTO test12g
  FROM rt_float
 WHERE y > 0;
SET pg_strom.enabled = off;
SELECT id, a*b v1, a*c v2, a*e v3,
           c*b v4, c*d v5, c*e v6,
           e*b v7, e*d v8, e*f v9
  INTO test12p
  FROM rt_float
 WHERE y > 0;
(SELECT * FROM test12g EXCEPT ALL SELECT * FROM test12p) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

(SELECT * FROM test12p EXCEPT ALL SELECT * FROM test12g) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

-- '/' operators
SET pg_strom.enabled = on;
EXPLAIN (verbose, costs off)
SELECT id, a/b v1, a/d v2, a/f v3,
           c/b v4, c/d v5, c/f v6,
           e/b v7, e/d v8, e/f v9
  INTO test13g
  FROM rt_float
 WHERE z BETWEEN -16000 AND 16000
   AND b != 0.0 AND d != 0.0 AND f != 0.0;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  

 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a / b)), ((a / d)), ((a / f)), ((c / b)), ((c / d)), ((c / f)), ((e / b)), ((e / d)), ((e / f))
   GPU Projection: id, (a / b), (a / d), (a / f), (c / b), (c / d), (c / f), (e / b), (e / d), (e / f)
   GPU Scan Quals: ((z >= '-16000'::integer) AND (z <= 16000) AND (b <> '0'::double precision) AND (d <> '0'::double precision) AND (f <> '0'::double precision)) [rows: 4320 -> 21]
   KVars-Slot: <slot=0, type='int8', expr='z'>, <slot=1, type='float2', expr='b'>, <slot=2, type='float4', expr='d'>, <slot=3, type='float8', expr='f'>, <slot=4, type='int4', expr='id'>, <slot=5, type='float4', expr='(a / b)'>, <slot=6, type='float2', expr='a'>, <slot=7, type='float4', expr='(a / d)'>, <slot=8, type='float8', expr='(a / f)'>, <slot=9, type='float4', expr='(c / b)'>, <slot=10, type='float4', expr='c'>, <slot=11, type='float4', expr='(c / d)'>, <slot=12, type='float8', expr='(c / f)'>, <slot=13, type='float8', expr='(e / b)'>, <slot=14, type='float8', expr='e'>, <slot=15, type='float8', expr='(e / d)'>, <slot=16, type='float8', expr='(e / f)'>
   KVecs-Buffer: nbytes: 98304, ndims: 2, items=[kvec0=<0x0000-47ff, type='int8', expr='z'>, kvec1=<0x4800-5fff, type='float2', expr='b'>, kvec2=<0x6000-87ff, type='float4', expr='d'>, kvec3=<0x8800-cfff, type='float8', expr='f'>, kvec4=<0xd000-f7ff, type='int4', expr='id'>, kvec5=<0xf800-10fff, type='float2', expr='a'>, kvec6=<0x11000-137ff, type='float4', expr='c'>, kvec7=<0x13800-17fff, type='float8', expr='e'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=4, type='int4' resno=1(id)>, <slot=6, type='float2' resno=2(a)>, <slot=1, type='float2' resno=3(b)>, <slot=10, type='float4' resno=4(c)>, <slot=2, type='float4' resno=5(d)>, <slot=14, type='float8' resno=6(e)>, <slot=3, type='float8' resno=7(f)>, <slot=0, type='int8' resno=10(z)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=1, offset=0x4800-5fff, type='float2', expr='b'>, <slot=2, offset=0x6000-87ff, type='float4', expr='d'>, <slot=3, offset=0x8800-cfff, type='float8', expr='f'>, <slot=4, offset=0xd000-f7ff, type='int4', expr='id'>, <slot=6, offset=0xf800-10fff, type='float2', expr='a'>, <slot=10, offset=0x11000-137ff, type='float4', expr='c'>, <slot=14, offset=0x13800-17fff, type='float8', expr='e'>]}}}
   Scan Quals OpCode: {Bool::AND args=[{Func(bool)::int84ge args=[{Var(int8): slot=0, expr='z'}, {Const(int4): value='-16000'}]}, {Func(bool)::int84le args=[{Var(int8): slot=0, expr='z'}, {Const(int4): value='16000'}]}, {Func(bool)::float28ne args=[{Var(float2): slot=1, expr='b'}, {Const(float8): value='0'}]}, {Func(bool)::float48ne args=[{Var(float4): slot=2, expr='d'}, {Const(float8): value='0'}]}, {Func(bool)::float8ne args=[{Var(float8): slot=3, expr='f'}, {Const(float8): value='0'}]}]}
   Projection OpCode: {Projection: layout=<4,5,7,8,9,11,12,13,15,16> args=[{SaveExpr: <slot=4, type='int4'> arg={Var(int4): kvec=0xd000-f800, expr='id'}}, {SaveExpr: <slot=5, type='float4'> arg={Func(float4)::float2div args=[{Var(float2): kvec=0xf800-11000, expr='a'}, {Var(float2): kvec=0x4800-6000, expr='b'}]}}, {SaveExpr: <slot=7, type='float4'> arg={Func(float4)::float24div args=[{Var(float2): kvec=0xf800-11000, expr='a'}, {Var(float4): kvec=0x6000-8800, expr='d'}]}}, {SaveExpr: <slot=8, type='float8'> arg={Func(float8)::float28div args=[{Var(float2): kvec=0xf800-11000, expr='a'}, {Var(float8): kvec=0x8800-d000, expr='f'}]}}, {SaveExpr: <slot=9, type='float4'> arg={Func(float4)::float42div args=[{Var(float4): kvec=0x11000-13800, expr='c'}, {Var(float2): kvec=0x4800-6000, expr='b'}]}}, {SaveExpr: <slot=11, type='float4'> arg={Func(float4)::float4div args=[{Var(float4): kvec=0x11000-13800, expr='c'}, {Var(float4): kvec=0x6000-8800, expr='d'}]}}, {SaveExpr: <slot=12, type='float8'> arg={Func(float8)::float48div args=[{Var(float4): kvec=0x11000-13800, expr='c'}, {Var(float8): kvec=0x8800-d000, expr='f'}]}}, {SaveExpr: <slot=13, type='float8'> arg={Func(float8)::float82div args=[{Var(float8): kvec=0x13800-18000, expr='e'}, {Var(float2): kvec=0x4800-6000, expr='b'}]}}, {SaveExpr: <slot=15, type='float8'> arg={Func(float8)::float84div args=[{Var(float8): kvec=0x13800-18000, expr='e'}, {Var(float4): kvec=0x6000-8800, expr='d'}]}}, {SaveExpr: <slot=16, type='float8'> arg={Func(float8)::float8div args=[{Var(float8): kvec=0x13800-18000, expr='e'}, {Var(float8): kvec=0x8800-d000, expr='f'}]}}]}
(10 rows)

SELECT id, a/b v1, a/d v2, a/f v3,
           c/b v4, c/d v5, c/f v6,
           e/b v7, e/d v8, e/f v9
  INTO test13g
  FROM rt_float
 WHERE z BETWEEN -16000 AND 16000
   AND b != 0.0 AND d != 0.0 AND f != 0.0;
SET pg_strom.enabled = off;
SELECT id, a/b v1, a/d v2, a/f v3,
           c/b v4, c/d v5, c/f v6,
           e/b v7, e/d v8, e/f v9
  INTO test13p
  FROM rt_float
 WHERE z BETWEEN -16000 AND 16000
   AND b != 0.0 AND d != 0.0 AND f != 0.0;
SELECT *
FROM test13g g, test13p p
WHERE g.id=p.id 
AND (abs(g.v1 - p.v1) > 0.1 OR abs(g.v2 - p.v2) > 0.1 OR abs(g.v3 - p.v3) > 0.001 OR
      abs(g.v4 - p.v4) > 0.001 OR abs(g.v5 - p.v5) > 0.001 OR abs(g.v6 - p.v6) > 0.001 OR
      abs(g.v7 - p.v7) > 0.001 OR abs(g.v8 - p.v8) > 0.001 OR abs(g.v9 - p.v9) > 0.001);
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 | id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----
(0 rows)

-- unary operators ('+','-','@')
SET pg_strom.enabled = on;
EXPLAIN (verbose, costs off)
SELECT id, +a v1, -b v2, @(a+b) v3,
           +c v4, -d v5, @(c+d) v6,
           +e v7, -f v8, @(e+f) v9
  INTO test14g
  FROM rt_float
 WHERE z < 0;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((+ a)), ((- b)), ((@ (a + b))), ((+ c)), ((- d)), ((@ (c + d))), ((+ e)), ((- f)), ((@ (e + f)))
   GPU Projection: id, (+ a), (- b), (@ (a + b)), (+ c), (- d), (@ (c + d)), (+ e), (- f), (@ (e + f))
   GPU Scan Quals: (z < 0) [rows: 4320 -> 1440]
   KVars-Slot: <slot=0, type='int8', expr='z'>, <slot=1, type='int4', expr='id'>, <slot=2, type='float2', expr='(+ a)'>, <slot=3, type='float2', expr='a'>, <slot=4, type='float2', expr='(- b)'>, <slot=5, type='float2', expr='b'>, <slot=6, type='float4', expr='(@ (a + b))'>, <slot=7, type='float4', expr='(+ c)'>, <slot=8, type='float4', expr='c'>, <slot=9, type='float4', expr='(- d)'>, <slot=10, type='float4', expr='d'>, <slot=11, type='float4', expr='(@ (c + d))'>, <slot=12, type='float8', expr='(+ e)'>, <slot=13, type='float8', expr='e'>, <slot=14, type='float8', expr='(- f)'>, <slot=15, type='float8', expr='f'>, <slot=16, type='float8', expr='(@ (e + f))'>
   KVecs-Buffer: nbytes: 98304, ndims: 2, items=[kvec0=<0x0000-47ff, type='int8', expr='z'>, kvec1=<0x4800-6fff, type='int4', expr='id'>, kvec2=<0x7000-87ff, type='float2', expr='a'>, kvec3=<0x8800-9fff, type='float2', expr='b'>, kvec4=<0xa000-c7ff, type='float4', expr='c'>, kvec5=<0xc800-efff, type='float4', expr='d'>, kvec6=<0xf000-137ff, type='float8', expr='e'>, kvec7=<0x13800-17fff, type='float8', expr='f'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=1, type='int4' resno=1(id)>, <slot=3, type='float2' resno=2(a)>, <slot=5, type='float2' resno=3(b)>, <slot=8, type='float4' resno=4(c)>, <slot=10, type='float4' resno=5(d)>, <slot=13, type='float8' resno=6(e)>, <slot=15, type='float8' resno=7(f)>, <slot=0, type='int8' resno=10(z)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=1, offset=0x4800-6fff, type='int4', expr='id'>, <slot=3, offset=0x7000-87ff, type='float2', expr='a'>, <slot=5, offset=0x8800-9fff, type='float2', expr='b'>, <slot=8, offset=0xa000-c7ff, type='float4', expr='c'>, <slot=10, offset=0xc800-efff, type='float4', expr='d'>, <slot=13, offset=0xf000-137ff, type='float8', expr='e'>, <slot=15, offset=0x13800-17fff, type='float8', expr='f'>]}}}
   Scan Quals OpCode: {Func(bool)::int84lt args=[{Var(int8): slot=0, expr='z'}, {Const(int4): value='0'}]}
   Projection OpCode: {Projection: layout=<1,2,4,6,7,9,11,12,14,16> args=[{SaveExpr: <slot=1, type='int4'> arg={Var(int4): kvec=0x4800-7000, expr='id'}}, {SaveExpr: <slot=2, type='float2'> arg={Func(float2)::float2up arg={Var(float2): kvec=0x7000-8800, expr='a'}}}, {SaveExpr: <slot=4, type='float2'> arg={Func(float2)::float2um arg={Var(float2): kvec=0x8800-a000, expr='b'}}}, {SaveExpr: <slot=6, type='float4'> arg={Func(float4)::float4abs arg={Func(float4)::float2pl args=[{Var(float2): kvec=0x7000-8800, expr='a'}, {Var(float2): kvec=0x8800-a000, expr='b'}]}}}, {SaveExpr: <slot=7, type='float4'> arg={Func(float4)::float4up arg={Var(float4): kvec=0xa000-c800, expr='c'}}}, {SaveExpr: <slot=9, type='float4'> arg={Func(float4)::float4um arg={Var(float4): kvec=0xc800-f000, expr='d'}}}, {SaveExpr: <slot=11, type='float4'> arg={Func(float4)::float4abs arg={Func(float4)::float4pl args=[{Var(float4): kvec=0xa000-c800, expr='c'}, {Var(float4): kvec=0xc800-f000, expr='d'}]}}}, {SaveExpr: <slot=12, type='float8'> arg={Func(float8)::float8up arg={Var(float8): kvec=0xf000-13800, expr='e'}}}, {SaveExpr: <slot=14, type='float8'> arg={Func(float8)::float8um arg={Var(float8): kvec=0x13800-18000, expr='f'}}}, {SaveExpr: <slot=16, type='float8'> arg={Func(float8)::float8abs arg={Func(float8)::float8pl args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float8): kvec=0x13800-18000, expr='f'}]}}}]}
(10 rows)

SELECT id, +a v1, -b v2, @(a+b) v3,
           +c v4, -d v5, @(c+d) v6,
           +e v7, -f v8, @(e+f) v9
  INTO test14g
  FROM rt_float
 WHERE z < 0;
SET pg_strom.enabled = off;
SELECT id, +a v1, -b v2, @(a+b) v3,
           +c v4, -d v5, @(c+d) v6,
           +e v7, -f v8, @(e+f) v9
  INTO test14p
  FROM rt_float
 WHERE z < 0;
SELECT *
FROM test14g g, test14p p
WHERE g.id=p.id 
AND (abs(g.v1 - p.v1) > 0.1 OR abs(g.v2 - p.v2) > 0.1 OR abs(g.v3 - p.v3) > 0.001 OR
      abs(g.v4 - p.v4) > 0.001 OR abs(g.v5 - p.v5) > 0.001 OR abs(g.v6 - p.v6) > 0.001 OR
      abs(g.v7 - p.v7) > 0.001 OR abs(g.v8 - p.v8) > 0.001 OR abs(g.v9 - p.v9) > 0.001);
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 | id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----
(0 rows)

-- '='  : equal operators
SET pg_strom.enabled = on;
EXPLAIN (costs off, verbose)
SELECT id, a=b v1, a=d v2, a=f v3,
           c=b v4, c=d v5, c=f v6,
           e=b v7, e=d v8, e=f v9
  INTO test20g
  FROM rt_float
 WHERE id % 6 = 0;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a = b)), ((a = d)), ((a = f)), ((c = b)), ((c = d)), ((c = f)), ((e = b)), ((e = d)), ((e = f))
   GPU Projection: id, (a = b), (a = d), (a = f), (c = b), (c = d), (c = f), (e = b), (e = d), (e = f)
   GPU Scan Quals: ((id % 6) = 0) [rows: 4320 -> 22]
   KVars-Slot: <slot=0, type='int4', expr='id'>, <slot=1, type='bool', expr='(a = b)'>, <slot=2, type='float2', expr='a'>, <slot=3, type='float2', expr='b'>, <slot=4, type='bool', expr='(a = d)'>, <slot=5, type='float4', expr='d'>, <slot=6, type='bool', expr='(a = f)'>, <slot=7, type='float8', expr='f'>, <slot=8, type='bool', expr='(c = b)'>, <slot=9, type='float4', expr='c'>, <slot=10, type='bool', expr='(c = d)'>, <slot=11, type='bool', expr='(c = f)'>, <slot=12, type='bool', expr='(e = b)'>, <slot=13, type='float8', expr='e'>, <slot=14, type='bool', expr='(e = d)'>, <slot=15, type='bool', expr='(e = f)'>
   KVecs-Buffer: nbytes: 79872, ndims: 2, items=[kvec0=<0x0000-27ff, type='int4', expr='id'>, kvec1=<0x2800-3fff, type='float2', expr='a'>, kvec2=<0x4000-57ff, type='float2', expr='b'>, kvec3=<0x5800-7fff, type='float4', expr='d'>, kvec4=<0x8000-c7ff, type='float8', expr='f'>, kvec5=<0xc800-efff, type='float4', expr='c'>, kvec6=<0xf000-137ff, type='float8', expr='e'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=0, type='int4' resno=1(id)>, <slot=2, type='float2' resno=2(a)>, <slot=3, type='float2' resno=3(b)>, <slot=9, type='float4' resno=4(c)>, <slot=5, type='float4' resno=5(d)>, <slot=13, type='float8' resno=6(e)>, <slot=7, type='float8' resno=7(f)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-27ff, type='int4', expr='id'>, <slot=2, offset=0x2800-3fff, type='float2', expr='a'>, <slot=3, offset=0x4000-57ff, type='float2', expr='b'>, <slot=5, offset=0x5800-7fff, type='float4', expr='d'>, <slot=7, offset=0x8000-c7ff, type='float8', expr='f'>, <slot=9, offset=0xc800-efff, type='float4', expr='c'>, <slot=13, offset=0xf000-137ff, type='float8', expr='e'>]}}}
   Scan Quals OpCode: {Func(bool)::int4eq args=[{Func(int4)::int4mod args=[{Var(int4): slot=0, expr='id'}, {Const(int4): value='6'}]}, {Const(int4): value='0'}]}
   Projection OpCode: {Projection: layout=<0,1,4,6,8,10,11,12,14,15> args=[{SaveExpr: <slot=0, type='int4'> arg={Var(int4): kvec=0x0000-2800, expr='id'}}, {SaveExpr: <slot=1, type='bool'> arg={Func(bool)::float2eq args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=4, type='bool'> arg={Func(bool)::float24eq args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=6, type='bool'> arg={Func(bool)::float28eq args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=8, type='bool'> arg={Func(bool)::float42eq args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=10, type='bool'> arg={Func(bool)::float4eq args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=11, type='bool'> arg={Func(bool)::float48eq args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=12, type='bool'> arg={Func(bool)::float82eq args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=14, type='bool'> arg={Func(bool)::float84eq args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=15, type='bool'> arg={Func(bool)::float8eq args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}]}
(10 rows)

SELECT id, a=b v1, a=d v2, a=f v3,
           c=b v4, c=d v5, c=f v6,
           e=b v7, e=d v8, e=f v9
  INTO test20g
  FROM rt_float
 WHERE id % 6 = 0;
SET pg_strom.enabled = off;
SELECT id, a=b v1, a=d v2, a=f v3,
           c=b v4, c=d v5, c=f v6,
           e=b v7, e=d v8, e=f v9
  INTO test20p
  FROM rt_float
 WHERE id % 6 = 0;
(SELECT * FROM test20g EXCEPT ALL SELECT * FROM test20p) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

(SELECT * FROM test20p EXCEPT ALL SELECT * FROM test20g) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

-- '<>' : not equal operators
SET pg_strom.enabled = on;
EXPLAIN (costs off, verbose)
SELECT id, a<>b v1, a<>d v2, a<>f v3,
           c<>b v4, c<>d v5, c<>f v6,
           e<>b v7, e<>d v8, e<>f v9
  INTO test21g
  FROM rt_float
 WHERE id % 6 = 1;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a <> b)), ((a <> d)), ((a <> f)), ((c <> b)), ((c <> d)), ((c <> f)), ((e <> b)), ((e <> d)), ((e <> f))
   GPU Projection: id, (a <> b), (a <> d), (a <> f), (c <> b), (c <> d), (c <> f), (e <> b), (e <> d), (e <> f)
   GPU Scan Quals: ((id % 6) = 1) [rows: 4320 -> 22]
   KVars-Slot: <slot=0, type='int4', expr='id'>, <slot=1, type='bool', expr='(a <> b)'>, <slot=2, type='float2', expr='a'>, <slot=3, type='float2', expr='b'>, <slot=4, type='bool', expr='(a <> d)'>, <slot=5, type='float4', expr='d'>, <slot=6, type='bool', expr='(a <> f)'>, <slot=7, type='float8', expr='f'>, <slot=8, type='bool', expr='(c <> b)'>, <slot=9, type='float4', expr='c'>, <slot=10, type='bool', expr='(c <> d)'>, <slot=11, type='bool', expr='(c <> f)'>, <slot=12, type='bool', expr='(e <> b)'>, <slot=13, type='float8', expr='e'>, <slot=14, type='bool', expr='(e <> d)'>, <slot=15, type='bool', expr='(e <> f)'>
   KVecs-Buffer: nbytes: 79872, ndims: 2, items=[kvec0=<0x0000-27ff, type='int4', expr='id'>, kvec1=<0x2800-3fff, type='float2', expr='a'>, kvec2=<0x4000-57ff, type='float2', expr='b'>, kvec3=<0x5800-7fff, type='float4', expr='d'>, kvec4=<0x8000-c7ff, type='float8', expr='f'>, kvec5=<0xc800-efff, type='float4', expr='c'>, kvec6=<0xf000-137ff, type='float8', expr='e'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=0, type='int4' resno=1(id)>, <slot=2, type='float2' resno=2(a)>, <slot=3, type='float2' resno=3(b)>, <slot=9, type='float4' resno=4(c)>, <slot=5, type='float4' resno=5(d)>, <slot=13, type='float8' resno=6(e)>, <slot=7, type='float8' resno=7(f)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-27ff, type='int4', expr='id'>, <slot=2, offset=0x2800-3fff, type='float2', expr='a'>, <slot=3, offset=0x4000-57ff, type='float2', expr='b'>, <slot=5, offset=0x5800-7fff, type='float4', expr='d'>, <slot=7, offset=0x8000-c7ff, type='float8', expr='f'>, <slot=9, offset=0xc800-efff, type='float4', expr='c'>, <slot=13, offset=0xf000-137ff, type='float8', expr='e'>]}}}
   Scan Quals OpCode: {Func(bool)::int4eq args=[{Func(int4)::int4mod args=[{Var(int4): slot=0, expr='id'}, {Const(int4): value='6'}]}, {Const(int4): value='1'}]}
   Projection OpCode: {Projection: layout=<0,1,4,6,8,10,11,12,14,15> args=[{SaveExpr: <slot=0, type='int4'> arg={Var(int4): kvec=0x0000-2800, expr='id'}}, {SaveExpr: <slot=1, type='bool'> arg={Func(bool)::float2ne args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=4, type='bool'> arg={Func(bool)::float24ne args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=6, type='bool'> arg={Func(bool)::float28ne args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=8, type='bool'> arg={Func(bool)::float42ne args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=10, type='bool'> arg={Func(bool)::float4ne args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=11, type='bool'> arg={Func(bool)::float48ne args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=12, type='bool'> arg={Func(bool)::float82ne args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=14, type='bool'> arg={Func(bool)::float84ne args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=15, type='bool'> arg={Func(bool)::float8ne args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}]}
(10 rows)

SELECT id, a<>b v1, a<>d v2, a<>f v3,
           c<>b v4, c<>d v5, c<>f v6,
           e<>b v7, e<>d v8, e<>f v9
  INTO test21g
  FROM rt_float
 WHERE id % 6 = 1;
SET pg_strom.enabled = off;
SELECT id, a<>b v1, a<>d v2, a<>f v3,
           c<>b v4, c<>d v5, c<>f v6,
           e<>b v7, e<>d v8, e<>f v9
  INTO test21p
  FROM rt_float
 WHERE id % 6 = 1;
(SELECT * FROM test21g EXCEPT ALL SELECT * FROM test21p) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

(SELECT * FROM test21p EXCEPT ALL SELECT * FROM test21g) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

-- '>'  : greater than operators
SET pg_strom.enabled = on;
EXPLAIN (costs off, verbose)
SELECT id, a>b v1, a>d v2, a>f v3,
           c>b v4, c>d v5, c>f v6,
           e>b v7, e>d v8, e>f v9
  INTO test22g
  FROM rt_float
 WHERE id % 6 = 2;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a > b)), ((a > d)), ((a > f)), ((c > b)), ((c > d)), ((c > f)), ((e > b)), ((e > d)), ((e > f))
   GPU Projection: id, (a > b), (a > d), (a > f), (c > b), (c > d), (c > f), (e > b), (e > d), (e > f)
   GPU Scan Quals: ((id % 6) = 2) [rows: 4320 -> 22]
   KVars-Slot: <slot=0, type='int4', expr='id'>, <slot=1, type='bool', expr='(a > b)'>, <slot=2, type='float2', expr='a'>, <slot=3, type='float2', expr='b'>, <slot=4, type='bool', expr='(a > d)'>, <slot=5, type='float4', expr='d'>, <slot=6, type='bool', expr='(a > f)'>, <slot=7, type='float8', expr='f'>, <slot=8, type='bool', expr='(c > b)'>, <slot=9, type='float4', expr='c'>, <slot=10, type='bool', expr='(c > d)'>, <slot=11, type='bool', expr='(c > f)'>, <slot=12, type='bool', expr='(e > b)'>, <slot=13, type='float8', expr='e'>, <slot=14, type='bool', expr='(e > d)'>, <slot=15, type='bool', expr='(e > f)'>
   KVecs-Buffer: nbytes: 79872, ndims: 2, items=[kvec0=<0x0000-27ff, type='int4', expr='id'>, kvec1=<0x2800-3fff, type='float2', expr='a'>, kvec2=<0x4000-57ff, type='float2', expr='b'>, kvec3=<0x5800-7fff, type='float4', expr='d'>, kvec4=<0x8000-c7ff, type='float8', expr='f'>, kvec5=<0xc800-efff, type='float4', expr='c'>, kvec6=<0xf000-137ff, type='float8', expr='e'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=0, type='int4' resno=1(id)>, <slot=2, type='float2' resno=2(a)>, <slot=3, type='float2' resno=3(b)>, <slot=9, type='float4' resno=4(c)>, <slot=5, type='float4' resno=5(d)>, <slot=13, type='float8' resno=6(e)>, <slot=7, type='float8' resno=7(f)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-27ff, type='int4', expr='id'>, <slot=2, offset=0x2800-3fff, type='float2', expr='a'>, <slot=3, offset=0x4000-57ff, type='float2', expr='b'>, <slot=5, offset=0x5800-7fff, type='float4', expr='d'>, <slot=7, offset=0x8000-c7ff, type='float8', expr='f'>, <slot=9, offset=0xc800-efff, type='float4', expr='c'>, <slot=13, offset=0xf000-137ff, type='float8', expr='e'>]}}}
   Scan Quals OpCode: {Func(bool)::int4eq args=[{Func(int4)::int4mod args=[{Var(int4): slot=0, expr='id'}, {Const(int4): value='6'}]}, {Const(int4): value='2'}]}
   Projection OpCode: {Projection: layout=<0,1,4,6,8,10,11,12,14,15> args=[{SaveExpr: <slot=0, type='int4'> arg={Var(int4): kvec=0x0000-2800, expr='id'}}, {SaveExpr: <slot=1, type='bool'> arg={Func(bool)::float2gt args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=4, type='bool'> arg={Func(bool)::float24gt args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=6, type='bool'> arg={Func(bool)::float28gt args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=8, type='bool'> arg={Func(bool)::float42gt args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=10, type='bool'> arg={Func(bool)::float4gt args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=11, type='bool'> arg={Func(bool)::float48gt args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=12, type='bool'> arg={Func(bool)::float82gt args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=14, type='bool'> arg={Func(bool)::float84gt args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=15, type='bool'> arg={Func(bool)::float8gt args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}]}
(10 rows)

SELECT id, a>b v1, a>d v2, a>f v3,
           c>b v4, c>d v5, c>f v6,
           e>b v7, e>d v8, e>f v9
  INTO test22g
  FROM rt_float
 WHERE id % 6 = 2;
SET pg_strom.enabled = off;
SELECT id, a>b v1, a>d v2, a>f v3,
           c>b v4, c>d v5, c>f v6,
           e>b v7, e>d v8, e>f v9
  INTO test22p
  FROM rt_float
 WHERE id % 6 = 2;
(SELECT * FROM test22g EXCEPT ALL SELECT * FROM test22p) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

(SELECT * FROM test22p EXCEPT ALL SELECT * FROM test22g) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

-- '<'  : less than operators
SET pg_strom.enabled = on;
EXPLAIN (costs off, verbose)
SELECT id, a<b v1, a<d v2, a<f v3,
           c<b v4, c<d v5, c<f v6,
           e<b v7, e<d v8, e<f v9
  INTO test23g
  FROM rt_float
 WHERE id % 6 = 3;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a < b)), ((a < d)), ((a < f)), ((c < b)), ((c < d)), ((c < f)), ((e < b)), ((e < d)), ((e < f))
   GPU Projection: id, (a < b), (a < d), (a < f), (c < b), (c < d), (c < f), (e < b), (e < d), (e < f)
   GPU Scan Quals: ((id % 6) = 3) [rows: 4320 -> 22]
   KVars-Slot: <slot=0, type='int4', expr='id'>, <slot=1, type='bool', expr='(a < b)'>, <slot=2, type='float2', expr='a'>, <slot=3, type='float2', expr='b'>, <slot=4, type='bool', expr='(a < d)'>, <slot=5, type='float4', expr='d'>, <slot=6, type='bool', expr='(a < f)'>, <slot=7, type='float8', expr='f'>, <slot=8, type='bool', expr='(c < b)'>, <slot=9, type='float4', expr='c'>, <slot=10, type='bool', expr='(c < d)'>, <slot=11, type='bool', expr='(c < f)'>, <slot=12, type='bool', expr='(e < b)'>, <slot=13, type='float8', expr='e'>, <slot=14, type='bool', expr='(e < d)'>, <slot=15, type='bool', expr='(e < f)'>
   KVecs-Buffer: nbytes: 79872, ndims: 2, items=[kvec0=<0x0000-27ff, type='int4', expr='id'>, kvec1=<0x2800-3fff, type='float2', expr='a'>, kvec2=<0x4000-57ff, type='float2', expr='b'>, kvec3=<0x5800-7fff, type='float4', expr='d'>, kvec4=<0x8000-c7ff, type='float8', expr='f'>, kvec5=<0xc800-efff, type='float4', expr='c'>, kvec6=<0xf000-137ff, type='float8', expr='e'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=0, type='int4' resno=1(id)>, <slot=2, type='float2' resno=2(a)>, <slot=3, type='float2' resno=3(b)>, <slot=9, type='float4' resno=4(c)>, <slot=5, type='float4' resno=5(d)>, <slot=13, type='float8' resno=6(e)>, <slot=7, type='float8' resno=7(f)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-27ff, type='int4', expr='id'>, <slot=2, offset=0x2800-3fff, type='float2', expr='a'>, <slot=3, offset=0x4000-57ff, type='float2', expr='b'>, <slot=5, offset=0x5800-7fff, type='float4', expr='d'>, <slot=7, offset=0x8000-c7ff, type='float8', expr='f'>, <slot=9, offset=0xc800-efff, type='float4', expr='c'>, <slot=13, offset=0xf000-137ff, type='float8', expr='e'>]}}}
   Scan Quals OpCode: {Func(bool)::int4eq args=[{Func(int4)::int4mod args=[{Var(int4): slot=0, expr='id'}, {Const(int4): value='6'}]}, {Const(int4): value='3'}]}
   Projection OpCode: {Projection: layout=<0,1,4,6,8,10,11,12,14,15> args=[{SaveExpr: <slot=0, type='int4'> arg={Var(int4): kvec=0x0000-2800, expr='id'}}, {SaveExpr: <slot=1, type='bool'> arg={Func(bool)::float2lt args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=4, type='bool'> arg={Func(bool)::float24lt args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=6, type='bool'> arg={Func(bool)::float28lt args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=8, type='bool'> arg={Func(bool)::float42lt args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=10, type='bool'> arg={Func(bool)::float4lt args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=11, type='bool'> arg={Func(bool)::float48lt args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=12, type='bool'> arg={Func(bool)::float82lt args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=14, type='bool'> arg={Func(bool)::float84lt args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=15, type='bool'> arg={Func(bool)::float8lt args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}]}
(10 rows)

SELECT id, a<b v1, a<d v2, a<f v3,
           c<b v4, c<d v5, c<f v6,
           e<b v7, e<d v8, e<f v9
  INTO test23g
  FROM rt_float
 WHERE id % 6 = 3;
SET pg_strom.enabled = off;
SELECT id, a<b v1, a<d v2, a<f v3,
           c<b v4, c<d v5, c<f v6,
           e<b v7, e<d v8, e<f v9
  INTO test23p
  FROM rt_float
 WHERE id % 6 = 3;
(SELECT * FROM test23g EXCEPT ALL SELECT * FROM test23p) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

(SELECT * FROM test23p EXCEPT ALL SELECT * FROM test23g) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

-- '>=' : equal operators
SET pg_strom.enabled = on;
EXPLAIN (costs off, verbose)
SELECT id, a>=b v1, a>=d v2, a>=f v3,
           c>=b v4, c>=d v5, c>=f v6,
           e>=b v7, e>=d v8, e>=f v9
  INTO test24g
  FROM rt_float
 WHERE id % 6 = 4;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a >= b)), ((a >= d)), ((a >= f)), ((c >= b)), ((c >= d)), ((c >= f)), ((e >= b)), ((e >= d)), ((e >= f))
   GPU Projection: id, (a >= b), (a >= d), (a >= f), (c >= b), (c >= d), (c >= f), (e >= b), (e >= d), (e >= f)
   GPU Scan Quals: ((id % 6) = 4) [rows: 4320 -> 22]
   KVars-Slot: <slot=0, type='int4', expr='id'>, <slot=1, type='bool', expr='(a >= b)'>, <slot=2, type='float2', expr='a'>, <slot=3, type='float2', expr='b'>, <slot=4, type='bool', expr='(a >= d)'>, <slot=5, type='float4', expr='d'>, <slot=6, type='bool', expr='(a >= f)'>, <slot=7, type='float8', expr='f'>, <slot=8, type='bool', expr='(c >= b)'>, <slot=9, type='float4', expr='c'>, <slot=10, type='bool', expr='(c >= d)'>, <slot=11, type='bool', expr='(c >= f)'>, <slot=12, type='bool', expr='(e >= b)'>, <slot=13, type='float8', expr='e'>, <slot=14, type='bool', expr='(e >= d)'>, <slot=15, type='bool', expr='(e >= f)'>
   KVecs-Buffer: nbytes: 79872, ndims: 2, items=[kvec0=<0x0000-27ff, type='int4', expr='id'>, kvec1=<0x2800-3fff, type='float2', expr='a'>, kvec2=<0x4000-57ff, type='float2', expr='b'>, kvec3=<0x5800-7fff, type='float4', expr='d'>, kvec4=<0x8000-c7ff, type='float8', expr='f'>, kvec5=<0xc800-efff, type='float4', expr='c'>, kvec6=<0xf000-137ff, type='float8', expr='e'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=0, type='int4' resno=1(id)>, <slot=2, type='float2' resno=2(a)>, <slot=3, type='float2' resno=3(b)>, <slot=9, type='float4' resno=4(c)>, <slot=5, type='float4' resno=5(d)>, <slot=13, type='float8' resno=6(e)>, <slot=7, type='float8' resno=7(f)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-27ff, type='int4', expr='id'>, <slot=2, offset=0x2800-3fff, type='float2', expr='a'>, <slot=3, offset=0x4000-57ff, type='float2', expr='b'>, <slot=5, offset=0x5800-7fff, type='float4', expr='d'>, <slot=7, offset=0x8000-c7ff, type='float8', expr='f'>, <slot=9, offset=0xc800-efff, type='float4', expr='c'>, <slot=13, offset=0xf000-137ff, type='float8', expr='e'>]}}}
   Scan Quals OpCode: {Func(bool)::int4eq args=[{Func(int4)::int4mod args=[{Var(int4): slot=0, expr='id'}, {Const(int4): value='6'}]}, {Const(int4): value='4'}]}
   Projection OpCode: {Projection: layout=<0,1,4,6,8,10,11,12,14,15> args=[{SaveExpr: <slot=0, type='int4'> arg={Var(int4): kvec=0x0000-2800, expr='id'}}, {SaveExpr: <slot=1, type='bool'> arg={Func(bool)::float2ge args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=4, type='bool'> arg={Func(bool)::float24ge args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=6, type='bool'> arg={Func(bool)::float28ge args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=8, type='bool'> arg={Func(bool)::float42ge args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=10, type='bool'> arg={Func(bool)::float4ge args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=11, type='bool'> arg={Func(bool)::float48ge args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=12, type='bool'> arg={Func(bool)::float82ge args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=14, type='bool'> arg={Func(bool)::float84ge args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=15, type='bool'> arg={Func(bool)::float8ge args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}]}
(10 rows)

SELECT id, a>=b v1, a>=d v2, a>=f v3,
           c>=b v4, c>=d v5, c>=f v6,
           e>=b v7, e>=d v8, e>=f v9
  INTO test24g
  FROM rt_float
 WHERE id % 6 = 4;
SET pg_strom.enabled = off;
SELECT id, a>=b v1, a>=d v2, a>=f v3,
           c>=b v4, c>=d v5, c>=f v6,
           e>=b v7, e>=d v8, e>=f v9
  INTO test24p
  FROM rt_float
 WHERE id % 6 = 4;
(SELECT * FROM test24g EXCEPT ALL SELECT * FROM test24p) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

(SELECT * FROM test24p EXCEPT ALL SELECT * FROM test24g) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

-- '<=' : equal operators
SET pg_strom.enabled = on;
EXPLAIN (costs off, verbose)
SELECT id, a<=b v1, a<=d v2, a<=f v3,
           c<=b v4, c<=d v5, c<=f v6,
           e<=b v7, e<=d v8, e<=f v9
  INTO test25g
  FROM rt_float
 WHERE id % 6 = 5;


 Custom Scan (GpuScan) on regtest_dtype_float_temp.rt_float
   Output: id, ((a <= b)), ((a <= d)), ((a <= f)), ((c <= b)), ((c <= d)), ((c <= f)), ((e <= b)), ((e <= d)), ((e <= f))
   GPU Projection: id, (a <= b), (a <= d), (a <= f), (c <= b), (c <= d), (c <= f), (e <= b), (e <= d), (e <= f)
   GPU Scan Quals: ((id % 6) = 5) [rows: 4320 -> 22]
   KVars-Slot: <slot=0, type='int4', expr='id'>, <slot=1, type='bool', expr='(a <= b)'>, <slot=2, type='float2', expr='a'>, <slot=3, type='float2', expr='b'>, <slot=4, type='bool', expr='(a <= d)'>, <slot=5, type='float4', expr='d'>, <slot=6, type='bool', expr='(a <= f)'>, <slot=7, type='float8', expr='f'>, <slot=8, type='bool', expr='(c <= b)'>, <slot=9, type='float4', expr='c'>, <slot=10, type='bool', expr='(c <= d)'>, <slot=11, type='bool', expr='(c <= f)'>, <slot=12, type='bool', expr='(e <= b)'>, <slot=13, type='float8', expr='e'>, <slot=14, type='bool', expr='(e <= d)'>, <slot=15, type='bool', expr='(e <= f)'>
   KVecs-Buffer: nbytes: 79872, ndims: 2, items=[kvec0=<0x0000-27ff, type='int4', expr='id'>, kvec1=<0x2800-3fff, type='float2', expr='a'>, kvec2=<0x4000-57ff, type='float2', expr='b'>, kvec3=<0x5800-7fff, type='float4', expr='d'>, kvec4=<0x8000-c7ff, type='float8', expr='f'>, kvec5=<0xc800-efff, type='float4', expr='c'>, kvec6=<0xf000-137ff, type='float8', expr='e'>]
   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=0, type='int4' resno=1(id)>, <slot=2, type='float2' resno=2(a)>, <slot=3, type='float2' resno=3(b)>, <slot=9, type='float4' resno=4(c)>, <slot=5, type='float4' resno=5(d)>, <slot=13, type='float8' resno=6(e)>, <slot=7, type='float8' resno=7(f)>]}}
   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-27ff, type='int4', expr='id'>, <slot=2, offset=0x2800-3fff, type='float2', expr='a'>, <slot=3, offset=0x4000-57ff, type='float2', expr='b'>, <slot=5, offset=0x5800-7fff, type='float4', expr='d'>, <slot=7, offset=0x8000-c7ff, type='float8', expr='f'>, <slot=9, offset=0xc800-efff, type='float4', expr='c'>, <slot=13, offset=0xf000-137ff, type='float8', expr='e'>]}}}
   Scan Quals OpCode: {Func(bool)::int4eq args=[{Func(int4)::int4mod args=[{Var(int4): slot=0, expr='id'}, {Const(int4): value='6'}]}, {Const(int4): value='5'}]}
   Projection OpCode: {Projection: layout=<0,1,4,6,8,10,11,12,14,15> args=[{SaveExpr: <slot=0, type='int4'> arg={Var(int4): kvec=0x0000-2800, expr='id'}}, {SaveExpr: <slot=1, type='bool'> arg={Func(bool)::float2le args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=4, type='bool'> arg={Func(bool)::float24le args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=6, type='bool'> arg={Func(bool)::float28le args=[{Var(float2): kvec=0x2800-4000, expr='a'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=8, type='bool'> arg={Func(bool)::float42le args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=10, type='bool'> arg={Func(bool)::float4le args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=11, type='bool'> arg={Func(bool)::float48le args=[{Var(float4): kvec=0xc800-f000, expr='c'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}, {SaveExpr: <slot=12, type='bool'> arg={Func(bool)::float82le args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float2): kvec=0x4000-5800, expr='b'}]}}, {SaveExpr: <slot=14, type='bool'> arg={Func(bool)::float84le args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float4): kvec=0x5800-8000, expr='d'}]}}, {SaveExpr: <slot=15, type='bool'> arg={Func(bool)::float8le args=[{Var(float8): kvec=0xf000-13800, expr='e'}, {Var(float8): kvec=0x8000-c800, expr='f'}]}}]}
(10 rows)

SELECT id, a<=b v1, a<=d v2, a<=f v3,
           c<=b v4, c<=d v5, c<=f v6,
           e<=b v7, e<=d v8, e<=f v9
  INTO test25g
  FROM rt_float
 WHERE id % 6 = 5;
SET pg_strom.enabled = off;
SELECT id, a<=b v1, a<=d v2, a<=f v3,
           c<=b v4, c<=d v5, c<=f v6,
           e<=b v7, e<=d v8, e<=f v9
  INTO test25p
  FROM rt_float
 WHERE id % 6 = 5;
(SELECT * FROM test25g EXCEPT ALL SELECT * FROM test25p) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

(SELECT * FROM test25p EXCEPT ALL SELECT * FROM test25g) ORDER BY id;
 id | v1 | v2 | v3 | v4 | v5 | v6 | v7 | v8 | v9 
----+----+----+----+----+----+----+----+----+----
(0 rows)

-- cleanup temporary resource
SET client_min_messages = error;
DROP SCHEMA regtest_dtype_float_temp CASCADE;
