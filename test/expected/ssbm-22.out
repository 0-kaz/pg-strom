SET search_path = pgstrom_regress,public;
SET pg_strom.debug_kernel_source = off;
--Q2_2
EXPLAIN(costs off, verbose)
select sum(lo_revenue), d_year, p_brand1
  from lineorder, date1, part, supplier
  where lo_orderdate = d_datekey
    and lo_partkey = p_partkey
    and lo_suppkey = s_suppkey
    and p_brand1 between
           'MFGR#2221' and 'MFGR#2228'
    and s_region = 'ASIA'
  group by d_year, p_brand1
  order by d_year, p_brand1;
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate
   Output: sum(lineorder.lo_revenue), date1.d_year, part.p_brand1
   Group Key: date1.d_year, part.p_brand1
   ->  Gather Merge
         Output: date1.d_year, part.p_brand1, (PARTIAL sum(lineorder.lo_revenue))
         Workers Planned: 2
         ->  Partial GroupAggregate
               Output: date1.d_year, part.p_brand1, PARTIAL sum(lineorder.lo_revenue)
               Group Key: date1.d_year, part.p_brand1
               ->  Sort
                     Output: date1.d_year, part.p_brand1, lineorder.lo_revenue
                     Sort Key: date1.d_year, part.p_brand1
                     ->  Hash Join
                           Output: date1.d_year, part.p_brand1, lineorder.lo_revenue
                           Inner Unique: true
                           Hash Cond: (lineorder.lo_orderdate = date1.d_datekey)
                           ->  Parallel Custom Scan (GpuJoin)
                                 Output: lineorder.lo_revenue, lineorder.lo_orderdate, part.p_brand1
                                 GPU Projection: lineorder.lo_revenue::numeric, lineorder.lo_orderdate::integer, part.p_brand1::character(9)
                                 Depth 1: GpuHashJoin  (nrows 378...5446)
                                          HashKeys: part.p_partkey
                                          JoinQuals: (lineorder.lo_partkey = part.p_partkey)
                                          KDS-Hash (size: 167.01MB)
                                 GPU Preference: GPU0 (Tesla P40)
                                 ->  Parallel Seq Scan on pgstrom_regress.part
                                       Output: part.p_brand1, part.p_partkey
                                       Filter: ((part.p_brand1 >= 'MFGR#2221'::bpchar) AND (part.p_brand1 <= 'MFGR#2228'::bpchar))
                                 ->  Custom Scan (GpuJoin) on pgstrom_regress.lineorder
                                       Output: lineorder.lo_revenue, lineorder.lo_orderdate, lineorder.lo_partkey
                                       GPU Projection: lineorder.lo_revenue::numeric, lineorder.lo_orderdate::integer, lineorder.lo_partkey::integer
                                       Outer Scan: pgstrom_regress.lineorder
                                       Depth 1: GpuHashJoin  (nrows 11998030...2399006)
                                                HashKeys: lineorder.lo_suppkey
                                                JoinQuals: (lineorder.lo_suppkey = supplier.s_suppkey)
                                                KDS-Hash (size: 660.45KB)
                                       ->  Seq Scan on pgstrom_regress.supplier
                                             Output: supplier.s_suppkey
                                             Filter: (supplier.s_region = 'ASIA'::bpchar)
                           ->  Hash
                                 Output: date1.d_year, date1.d_datekey
                                 ->  Seq Scan on pgstrom_regress.date1
                                       Output: date1.d_year, date1.d_datekey
(42 rows)

select sum(lo_revenue), d_year, p_brand1
  from lineorder, date1, part, supplier
  where lo_orderdate = d_datekey
    and lo_partkey = p_partkey
    and lo_suppkey = s_suppkey
    and p_brand1 between
           'MFGR#2221' and 'MFGR#2228'
    and s_region = 'ASIA'
  group by d_year, p_brand1
  order by d_year, p_brand1;
    sum     | d_year | p_brand1  
------------+--------+-----------
 1174804911 |   1992 | MFGR#2221
 1197030558 |   1992 | MFGR#2222
 1179810482 |   1992 | MFGR#2223
 1119248576 |   1992 | MFGR#2224
 1252060146 |   1992 | MFGR#2225
 1439598277 |   1992 | MFGR#2226
 1335524556 |   1992 | MFGR#2227
 1491664070 |   1992 | MFGR#2228
 1373337045 |   1993 | MFGR#2221
 1308203263 |   1993 | MFGR#2222
 1225154340 |   1993 | MFGR#2223
 1325059744 |   1993 | MFGR#2224
 1224703116 |   1993 | MFGR#2225
 1447428465 |   1993 | MFGR#2226
 1403935987 |   1993 | MFGR#2227
 1540399081 |   1993 | MFGR#2228
 1308086972 |   1994 | MFGR#2221
 1312679348 |   1994 | MFGR#2222
 1182683813 |   1994 | MFGR#2223
 1118897925 |   1994 | MFGR#2224
 1372623341 |   1994 | MFGR#2225
 1368915818 |   1994 | MFGR#2226
 1204354678 |   1994 | MFGR#2227
 1390333566 |   1994 | MFGR#2228
 1308287959 |   1995 | MFGR#2221
 1304698430 |   1995 | MFGR#2222
 1319589114 |   1995 | MFGR#2223
 1227320598 |   1995 | MFGR#2224
 1373526451 |   1995 | MFGR#2225
 1450685718 |   1995 | MFGR#2226
 1149267222 |   1995 | MFGR#2227
 1379318962 |   1995 | MFGR#2228
 1324850790 |   1996 | MFGR#2221
 1465025292 |   1996 | MFGR#2222
 1192310332 |   1996 | MFGR#2223
 1040783708 |   1996 | MFGR#2224
 1278707520 |   1996 | MFGR#2225
 1462093203 |   1996 | MFGR#2226
 1218441103 |   1996 | MFGR#2227
 1435753763 |   1996 | MFGR#2228
 1254353683 |   1997 | MFGR#2221
 1265513248 |   1997 | MFGR#2222
 1262098264 |   1997 | MFGR#2223
 1136208731 |   1997 | MFGR#2224
 1362476108 |   1997 | MFGR#2225
 1389401058 |   1997 | MFGR#2226
 1355618426 |   1997 | MFGR#2227
 1335337081 |   1997 | MFGR#2228
  614642007 |   1998 | MFGR#2221
  743840619 |   1998 | MFGR#2222
  625520816 |   1998 | MFGR#2223
  713919185 |   1998 | MFGR#2224
  619628286 |   1998 | MFGR#2225
  777431903 |   1998 | MFGR#2226
  810220006 |   1998 | MFGR#2227
  857046242 |   1998 | MFGR#2228
(56 rows)

