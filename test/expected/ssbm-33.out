SET search_path = pgstrom_regress,public;
SET pg_strom.debug_kernel_source = off;
--Q3_3
EXPLAIN(costs off, verbose)
select c_city,s_city,d_year,sum(lo_revenue) as revenue
from customer,lineorder,supplier,date1
where lo_custkey = c_custkey
  and lo_suppkey = s_suppkey
  and lo_orderdate = d_datekey
  and (c_city='UNITED KI1' or c_city='UNITED KI5')
  and (s_city='UNITED KI1' or s_city='UNITED KI5')
  and d_year >= 1992 and d_year <= 1997
  group by c_city, s_city, d_year
  order by d_year asc,revenue desc;
                                                                                                                                                                                               QUERY PLAN                                                                                                                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: customer.c_city, supplier.s_city, date1.d_year, (sum(lineorder.lo_revenue))
   Sort Key: date1.d_year, (sum(lineorder.lo_revenue)) DESC
   ->  Finalize GroupAggregate
         Output: customer.c_city, supplier.s_city, date1.d_year, sum(lineorder.lo_revenue)
         Group Key: customer.c_city, supplier.s_city, date1.d_year
         ->  Gather Merge
               Output: customer.c_city, supplier.s_city, date1.d_year, (PARTIAL sum(lineorder.lo_revenue))
               Workers Planned: 2
               ->  Partial GroupAggregate
                     Output: customer.c_city, supplier.s_city, date1.d_year, PARTIAL sum(lineorder.lo_revenue)
                     Group Key: customer.c_city, supplier.s_city, date1.d_year
                     ->  Sort
                           Output: customer.c_city, supplier.s_city, date1.d_year, lineorder.lo_revenue
                           Sort Key: customer.c_city, supplier.s_city, date1.d_year
                           ->  Nested Loop
                                 Output: customer.c_city, supplier.s_city, date1.d_year, lineorder.lo_revenue
                                 Inner Unique: true
                                 ->  Parallel Custom Scan (GpuJoin) on pgstrom_regress.lineorder
                                       Output: customer.c_city, lineorder.lo_revenue, lineorder.lo_orderdate, supplier.s_city
                                       GPU Projection: customer.c_city::character(10), lineorder.lo_revenue::numeric, lineorder.lo_orderdate::integer, supplier.s_city::character(10)
                                       Outer Scan: pgstrom_regress.lineorder
                                       Depth 1: GpuHashJoin
                                                HashKeys: lineorder.lo_suppkey
                                                JoinQuals: (lineorder.lo_suppkey = supplier.s_suppkey)
                                       Depth 2: GpuHashJoin
                                                HashKeys: lineorder.lo_custkey
                                                JoinQuals: (lineorder.lo_custkey = customer.c_custkey)
                                       ->  Seq Scan on pgstrom_regress.supplier
                                             Output: supplier.s_city, supplier.s_suppkey
                                             Filter: ((supplier.s_city = 'UNITED KI1'::bpchar) OR (supplier.s_city = 'UNITED KI5'::bpchar))
                                       ->  Seq Scan on pgstrom_regress.customer
                                             Output: customer.c_city, customer.c_custkey
                                             Filter: ((customer.c_city = 'UNITED KI1'::bpchar) OR (customer.c_city = 'UNITED KI5'::bpchar))
                                 ->  Index Scan using date1_pkey on pgstrom_regress.date1
                                       Output: date1.d_datekey, date1.d_date, date1.d_dayofweek, date1.d_month, date1.d_year, date1.d_yearmonthnum, date1.d_yearmonth, date1.d_daynuminweek, date1.d_daynuminmonth, date1.d_daynuminyear, date1.d_monthnuminyear, date1.d_weeknuminyear, date1.d_sellingseason, date1.d_lastdayinweekfl, date1.d_lastdayinmonthfl, date1.d_holidayfl, date1.d_weekdayfl
                                       Index Cond: (date1.d_datekey = lineorder.lo_orderdate)
                                       Filter: ((date1.d_year >= 1992) AND (date1.d_year <= 1997))
(38 rows)

select c_city,s_city,d_year,sum(lo_revenue) as revenue
from customer,lineorder,supplier,date1
where lo_custkey = c_custkey
  and lo_suppkey = s_suppkey
  and lo_orderdate = d_datekey
  and (c_city='UNITED KI1' or c_city='UNITED KI5')
  and (s_city='UNITED KI1' or s_city='UNITED KI5')
  and d_year >= 1992 and d_year <= 1997
  group by c_city, s_city, d_year
  order by d_year asc,revenue desc;
   c_city   |   s_city   | d_year |  revenue  
------------+------------+--------+-----------
 UNITED KI5 | UNITED KI1 |   1992 | 139987015
 UNITED KI5 | UNITED KI5 |   1992 | 134090283
 UNITED KI1 | UNITED KI1 |   1992 |  76725489
 UNITED KI1 | UNITED KI5 |   1992 |  74498948
 UNITED KI1 | UNITED KI1 |   1993 | 158434408
 UNITED KI5 | UNITED KI1 |   1993 | 117487678
 UNITED KI5 | UNITED KI5 |   1993 |  62419321
 UNITED KI1 | UNITED KI5 |   1993 |  57021996
 UNITED KI1 | UNITED KI1 |   1994 | 120346223
 UNITED KI5 | UNITED KI1 |   1994 |  87669487
 UNITED KI5 | UNITED KI5 |   1994 |  76774323
 UNITED KI1 | UNITED KI5 |   1994 |  54196506
 UNITED KI1 | UNITED KI1 |   1995 | 174322740
 UNITED KI5 | UNITED KI5 |   1995 |  82117209
 UNITED KI5 | UNITED KI1 |   1995 |  82025557
 UNITED KI1 | UNITED KI5 |   1995 |  76598993
 UNITED KI5 | UNITED KI1 |   1996 | 123252900
 UNITED KI5 | UNITED KI5 |   1996 | 103545265
 UNITED KI1 | UNITED KI5 |   1996 | 101190480
 UNITED KI1 | UNITED KI1 |   1996 |  87743510
 UNITED KI5 | UNITED KI1 |   1997 | 141722288
 UNITED KI5 | UNITED KI5 |   1997 | 128487481
 UNITED KI1 | UNITED KI1 |   1997 | 112121112
 UNITED KI1 | UNITED KI5 |   1997 |  84065599
(24 rows)

