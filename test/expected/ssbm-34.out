SET search_path = pgstrom_regress,public;
SET pg_strom.debug_kernel_source = off;
--Q3_4
EXPLAIN(costs off, verbose)
select c_city, s_city, d_year, sum(lo_revenue) as revenue
from customer, lineorder, supplier, date1
   where lo_custkey = c_custkey
     and lo_suppkey = s_suppkey
     and lo_orderdate = d_datekey
      and (c_city='UNITED KI1' or c_city='UNITED KI5')
    and (s_city='UNITED KI1' or s_city='UNITED KI5')
    and d_yearmonth = 'Dec1997'
    group by c_city, s_city, d_year
  order by d_year asc, revenue desc;
                                                                                           QUERY PLAN                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort
   Output: customer.c_city, supplier.s_city, date1.d_year, (sum(lineorder.lo_revenue))
   Sort Key: date1.d_year, (sum(lineorder.lo_revenue)) DESC
   ->  GroupAggregate
         Output: customer.c_city, supplier.s_city, date1.d_year, sum(lineorder.lo_revenue)
         Group Key: customer.c_city, supplier.s_city, date1.d_year
         ->  Sort
               Output: customer.c_city, supplier.s_city, date1.d_year, lineorder.lo_revenue
               Sort Key: customer.c_city, supplier.s_city, date1.d_year
               ->  Gather
                     Output: customer.c_city, supplier.s_city, date1.d_year, lineorder.lo_revenue
                     Workers Planned: 2
                     ->  Nested Loop
                           Output: customer.c_city, supplier.s_city, date1.d_year, lineorder.lo_revenue
                           Inner Unique: true
                           ->  Parallel Custom Scan (GpuJoin) on pgstrom_regress.lineorder
                                 Output: lineorder.lo_revenue, lineorder.lo_custkey, supplier.s_city, date1.d_year
                                 GPU Projection: lineorder.lo_revenue::numeric, lineorder.lo_custkey::numeric, supplier.s_city::character(10), date1.d_year::integer
                                 Outer Scan: pgstrom_regress.lineorder
                                 Depth 1: GpuHashJoin  (nrows 4999179...94737)
                                          HashKeys: lineorder.lo_suppkey
                                          JoinQuals: (lineorder.lo_suppkey = supplier.s_suppkey)
                                          KDS-Hash (size: 26.27KB)
                                 Depth 2: GpuHashJoin  (nrows 94737...1149)
                                          HashKeys: lineorder.lo_orderdate
                                          JoinQuals: (lineorder.lo_orderdate = date1.d_datekey)
                                          KDS-Hash (size: 6272B)
                                 ->  Seq Scan on pgstrom_regress.supplier
                                       Output: supplier.s_city, supplier.s_suppkey
                                       Filter: ((supplier.s_city = 'UNITED KI1'::bpchar) OR (supplier.s_city = 'UNITED KI5'::bpchar))
                                 ->  Seq Scan on pgstrom_regress.date1
                                       Output: date1.d_year, date1.d_datekey
                                       Filter: (date1.d_yearmonth = 'Dec1997'::bpchar)
                           ->  Index Scan using customer_pkey on pgstrom_regress.customer
                                 Output: customer.c_custkey, customer.c_name, customer.c_address, customer.c_city, customer.c_nation, customer.c_region, customer.c_phone, customer.c_mktsegment
                                 Index Cond: (customer.c_custkey = lineorder.lo_custkey)
                                 Filter: ((customer.c_city = 'UNITED KI1'::bpchar) OR (customer.c_city = 'UNITED KI5'::bpchar))
(37 rows)

select c_city, s_city, d_year, sum(lo_revenue) as revenue
from customer, lineorder, supplier, date1
   where lo_custkey = c_custkey
     and lo_suppkey = s_suppkey
     and lo_orderdate = d_datekey
      and (c_city='UNITED KI1' or c_city='UNITED KI5')
    and (s_city='UNITED KI1' or s_city='UNITED KI5')
    and d_yearmonth = 'Dec1997'
    group by c_city, s_city, d_year
  order by d_year asc, revenue desc;
   c_city   |   s_city   | d_year | revenue  
------------+------------+--------+----------
 UNITED KI1 | UNITED KI1 |   1997 | 12128689
 UNITED KI5 | UNITED KI5 |   1997 | 11797616
 UNITED KI1 | UNITED KI5 |   1997 |  9721854
 UNITED KI5 | UNITED KI1 |   1997 |  4325555
(4 rows)

