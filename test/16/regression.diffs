diff -U3 /home/onishi/pg-strom/test/16/expected/fallback_pgsql.out /home/onishi/pg-strom/test/16/results/fallback_pgsql.out
--- /home/onishi/pg-strom/test/16/expected/fallback_pgsql.out	2024-04-18 01:21:16.632831718 +0900
+++ /home/onishi/pg-strom/test/16/results/fallback_pgsql.out	2024-04-18 01:25:36.583093001 +0900
@@ -296,7 +296,7 @@
  Custom Scan (GpuJoin) on regtest_arrow_index_temp.fallback_data d
    Output: d.aid, d.id, d.cat, d.x, d.y, d.memo, l.z, l.md5
    GPU Projection: d.aid, d.id, d.cat, d.x, d.y, d.memo, l.z, l.md5
-   GPU Join Quals [1]: (d.aid = l.aid) ... [nrows: 400001 -> 496979]
+   GPU Join Quals [1]: (d.aid = l.aid) ... [nrows: 400001 -> 496996]
    GPU Outer Hash [1]: d.aid
    GPU Inner Hash [1]: l.aid
    KVars-Slot: <slot=0, type='int4', expr='d.aid'>, <slot=1, type='int4', expr='d.id'>, <slot=2, type='text', expr='d.cat'>, <slot=3, type='float8', expr='d.x'>, <slot=4, type='float8', expr='d.y'>, <slot=5, type='text', expr='d.memo'>, <slot=6, type='float8', expr='l.z'>, <slot=7, type='bpchar', expr='l.md5'>, <slot=8, type='int4', expr='l.aid'>
@@ -343,35 +343,35 @@
 SELECT *
   FROM fallback_data d NATURAL JOIN fallback_enlarge l
  WHERE l.aid < 2500 AND memo LIKE '%ab%';


- Custom Scan (GpuJoin) on regtest_arrow_index_temp.fallback_data d
+                                                                                                                                                                                                                                                                                                                                                                          QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                          

+ Custom Scan (GpuJoin) on regtest_arrow_index_temp.fallback_enlarge l
    Output: d.aid, d.id, d.cat, d.x, d.y, d.memo, l.z, l.md5
    GPU Projection: d.aid, d.id, d.cat, d.x, d.y, d.memo, l.z, l.md5
-   GPU Scan Quals: (d.memo ~~ '%ab%'::text) [rows: 400001 -> 11862]
-   GPU Join Quals [1]: (d.aid = l.aid) ... [nrows: 11862 -> 36867]
-   GPU Outer Hash [1]: d.aid
-   GPU Inner Hash [1]: l.aid
-   KVars-Slot: <slot=0, type='text', expr='d.memo'>, <slot=1, type='int4', expr='d.aid'>, <slot=2, type='int4', expr='d.id'>, <slot=3, type='text', expr='d.cat'>, <slot=4, type='float8', expr='d.x'>, <slot=5, type='float8', expr='d.y'>, <slot=6, type='float8', expr='l.z'>, <slot=7, type='bpchar', expr='l.md5'>, <slot=8, type='int4', expr='l.aid'>
-   KVecs-Buffer: nbytes: 165888, ndims: 3, items=[kvec0=<0x0000-67ff, type='text', expr='memo'>, kvec1=<0x6800-8fff, type='int4', expr='aid'>, kvec2=<0x9000-b7ff, type='int4', expr='id'>, kvec3=<0xb800-11fff, type='text', expr='cat'>, kvec4=<0x12000-167ff, type='float8', expr='x'>, kvec5=<0x16800-1afff, type='float8', expr='y'>, kvec6=<0x1b000-1f7ff, type='float8', expr='z'>, kvec7=<0x1f800-25fff, type='bpchar', expr='md5'>, kvec8=<0x26000-287ff, type='int4', expr='aid'>]
-   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=2, type='int4' resno=1(id)>, <slot=1, type='int4' resno=2(aid)>, <slot=3, type='text' resno=3(cat)>, <slot=4, type='float8' resno=4(x)>, <slot=5, type='float8' resno=5(y)>, <slot=0, type='text' resno=6(memo)>]}, items[1]={LoadVars(depth=1): kvars=[<slot=6, type='float8' resno=1(z)>, <slot=7, type='bpchar' resno=2(md5)>, <slot=8, type='int4' resno=3(aid)>]}}
-   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-67ff, type='text', expr='memo'>, <slot=1, offset=0x6800-8fff, type='int4', expr='aid'>, <slot=2, offset=0x9000-b7ff, type='int4', expr='id'>, <slot=3, offset=0xb800-11fff, type='text', expr='cat'>, <slot=4, offset=0x12000-167ff, type='float8', expr='x'>, <slot=5, offset=0x16800-1afff, type='float8', expr='y'>]}}, items[1]={MoveVars(depth=1): items=[<offset=0x0000-67ff, type='text', expr='memo'>, <offset=0x6800-8fff, type='int4', expr='aid'>, <offset=0x9000-b7ff, type='int4', expr='id'>, <offset=0xb800-11fff, type='text', expr='cat'>, <offset=0x12000-167ff, type='float8', expr='x'>, <offset=0x16800-1afff, type='float8', expr='y'>, <slot=6, offset=0x1b000-1f7ff, type='float8', expr='z'>, <slot=7, offset=0x1f800-25fff, type='bpchar', expr='md5'>]}}}
-   Scan Quals OpCode: {Func(bool)::textlike args=[{Var(text): slot=0, expr='memo'}, {Const(text): value='%ab%'}]}
-   Join Quals OpCode: {Packed items[1]={JoinQuals:  {Func(bool)::int4eq args=[{Var(int4): kvec=0x6800-9000, expr='aid'}, {Var(int4): slot=8, expr='aid'}]}}}
-   Join HashValue OpCode: {Packed items[1]={HashValue arg={Var(int4): kvec=0x6800-9000, expr='aid'}}}
-   Projection OpCode: {Projection: layout=<1,2,3,4,5,0,6,7> args=[{SaveExpr: <slot=1, type='int4'> arg={Var(int4): kvec=0x6800-9000, expr='aid'}}, {SaveExpr: <slot=2, type='int4'> arg={Var(int4): kvec=0x9000-b800, expr='id'}}, {SaveExpr: <slot=3, type='text'> arg={Var(text): kvec=0xb800-12000, expr='cat'}}, {SaveExpr: <slot=4, type='float8'> arg={Var(float8): kvec=0x12000-16800, expr='x'}}, {SaveExpr: <slot=5, type='float8'> arg={Var(float8): kvec=0x16800-1b000, expr='y'}}, {SaveExpr: <slot=0, type='text'> arg={Var(text): kvec=0x0000-6800, expr='memo'}}, {SaveExpr: <slot=6, type='float8'> arg={Var(float8): kvec=0x1b000-1f800, expr='z'}}, {SaveExpr: <slot=7, type='bpchar'> arg={Var(bpchar): kvec=0x1f800-26000, expr='md5'}}]}
+   GPU Scan Quals: (l.aid < 2500) [rows: 20000 -> 12495]
+   GPU Join Quals [1]: (d.aid = l.aid) ... [nrows: 12495 -> 24607]
+   GPU Outer Hash [1]: l.aid
+   GPU Inner Hash [1]: d.aid
+   KVars-Slot: <slot=0, type='int4', expr='l.aid'>, <slot=1, type='int4', expr='d.aid'>, <slot=2, type='int4', expr='d.id'>, <slot=3, type='text', expr='d.cat'>, <slot=4, type='float8', expr='d.x'>, <slot=5, type='float8', expr='d.y'>, <slot=6, type='text', expr='d.memo'>, <slot=7, type='float8', expr='l.z'>, <slot=8, type='bpchar', expr='l.md5'>
+   KVecs-Buffer: nbytes: 165888, ndims: 3, items=[kvec0=<0x0000-27ff, type='int4', expr='aid'>, kvec1=<0x2800-4fff, type='int4', expr='aid'>, kvec2=<0x5000-77ff, type='int4', expr='id'>, kvec3=<0x7800-dfff, type='text', expr='cat'>, kvec4=<0xe000-127ff, type='float8', expr='x'>, kvec5=<0x12800-16fff, type='float8', expr='y'>, kvec6=<0x17000-1d7ff, type='text', expr='memo'>, kvec7=<0x1d800-21fff, type='float8', expr='z'>, kvec8=<0x22000-287ff, type='bpchar', expr='md5'>]
+   LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=0, type='int4' resno=1(aid)>, <slot=7, type='float8' resno=2(z)>, <slot=8, type='bpchar' resno=3(md5)>]}, items[1]={LoadVars(depth=1): kvars=[<slot=1, type='int4' resno=1(aid)>, <slot=2, type='int4' resno=2(id)>, <slot=3, type='text' resno=3(cat)>, <slot=4, type='float8' resno=4(x)>, <slot=5, type='float8' resno=5(y)>, <slot=6, type='text' resno=6(memo)>]}}
+   MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-27ff, type='int4', expr='aid'>, <slot=7, offset=0x1d800-21fff, type='float8', expr='z'>, <slot=8, offset=0x22000-287ff, type='bpchar', expr='md5'>]}}, items[1]={MoveVars(depth=1): items=[<slot=1, offset=0x2800-4fff, type='int4', expr='aid'>, <slot=2, offset=0x5000-77ff, type='int4', expr='id'>, <slot=3, offset=0x7800-dfff, type='text', expr='cat'>, <slot=4, offset=0xe000-127ff, type='float8', expr='x'>, <slot=5, offset=0x12800-16fff, type='float8', expr='y'>, <slot=6, offset=0x17000-1d7ff, type='text', expr='memo'>, <offset=0x1d800-21fff, type='float8', expr='z'>, <offset=0x22000-287ff, type='bpchar', expr='md5'>]}}}
+   Scan Quals OpCode: {Func(bool)::int4lt args=[{Var(int4): slot=0, expr='aid'}, {Const(int4): value='2500'}]}
+   Join Quals OpCode: {Packed items[1]={JoinQuals:  {Func(bool)::int4eq args=[{Var(int4): slot=1, expr='aid'}, {Var(int4): kvec=0x0000-2800, expr='aid'}]}}}
+   Join HashValue OpCode: {Packed items[1]={HashValue arg={Var(int4): kvec=0x0000-2800, expr='aid'}}}
+   Projection OpCode: {Projection: layout=<1,2,3,4,5,6,7,8> args=[{SaveExpr: <slot=1, type='int4'> arg={Var(int4): kvec=0x2800-5000, expr='aid'}}, {SaveExpr: <slot=2, type='int4'> arg={Var(int4): kvec=0x5000-7800, expr='id'}}, {SaveExpr: <slot=3, type='text'> arg={Var(text): kvec=0x7800-e000, expr='cat'}}, {SaveExpr: <slot=4, type='float8'> arg={Var(float8): kvec=0xe000-12800, expr='x'}}, {SaveExpr: <slot=5, type='float8'> arg={Var(float8): kvec=0x12800-17000, expr='y'}}, {SaveExpr: <slot=6, type='text'> arg={Var(text): kvec=0x17000-1d800, expr='memo'}}, {SaveExpr: <slot=7, type='float8'> arg={Var(float8): kvec=0x1d800-22000, expr='z'}}, {SaveExpr: <slot=8, type='bpchar'> arg={Var(bpchar): kvec=0x22000-28800, expr='md5'}}]}
    CUDA Stack Size: 4128
-   ->  Custom Scan (GpuScan) on regtest_arrow_index_temp.fallback_enlarge l
-         Output: l.z, l.md5, l.aid
-         GPU Projection: z, md5, aid
-         GPU Scan Quals: (aid < 2500) [rows: 20000 -> 12495]
-         KVars-Slot: <slot=0, type='int4', expr='aid'>, <slot=1, type='float8', expr='z'>, <slot=2, type='bpchar', expr='md5'>
-         KVecs-Buffer: nbytes: 55296, ndims: 2, items=[kvec0=<0x0000-27ff, type='int4', expr='aid'>, kvec1=<0x2800-6fff, type='float8', expr='z'>, kvec2=<0x7000-d7ff, type='bpchar', expr='md5'>]
-         LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=0, type='int4' resno=1(aid)>, <slot=1, type='float8' resno=2(z)>, <slot=2, type='bpchar' resno=3(md5)>]}}
-         MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-27ff, type='int4', expr='aid'>, <slot=1, offset=0x2800-6fff, type='float8', expr='z'>, <slot=2, offset=0x7000-d7ff, type='bpchar', expr='md5'>]}}}
-         Scan Quals OpCode: {Func(bool)::int4lt args=[{Var(int4): slot=0, expr='aid'}, {Const(int4): value='2500'}]}
-         Projection OpCode: {Projection: layout=<1,2,0> args=[{SaveExpr: <slot=1, type='float8'> arg={Var(float8): kvec=0x2800-7000, expr='z'}}, {SaveExpr: <slot=2, type='bpchar'> arg={Var(bpchar): kvec=0x7000-d800, expr='md5'}}, {SaveExpr: <slot=0, type='int4'> arg={Var(int4): kvec=0x0000-2800, expr='aid'}}]}
-         CUDA Stack Size: 3952
+   ->  Custom Scan (GpuScan) on regtest_arrow_index_temp.fallback_data d
+         Output: d.aid, d.id, d.cat, d.x, d.y, d.memo
+         GPU Projection: aid, id, cat, x, y, memo
+         GPU Scan Quals: (memo ~~ '%ab%'::text) [rows: 400001 -> 7917]
+         KVars-Slot: <slot=0, type='text', expr='memo'>, <slot=1, type='int4', expr='aid'>, <slot=2, type='int4', expr='id'>, <slot=3, type='text', expr='cat'>, <slot=4, type='float8', expr='x'>, <slot=5, type='float8', expr='y'>
+         KVecs-Buffer: nbytes: 110592, ndims: 2, items=[kvec0=<0x0000-67ff, type='text', expr='memo'>, kvec1=<0x6800-8fff, type='int4', expr='aid'>, kvec2=<0x9000-b7ff, type='int4', expr='id'>, kvec3=<0xb800-11fff, type='text', expr='cat'>, kvec4=<0x12000-167ff, type='float8', expr='x'>, kvec5=<0x16800-1afff, type='float8', expr='y'>]
+         LoadVars OpCode: {Packed items[0]={LoadVars(depth=0): kvars=[<slot=2, type='int4' resno=1(id)>, <slot=1, type='int4' resno=2(aid)>, <slot=3, type='text' resno=3(cat)>, <slot=4, type='float8' resno=4(x)>, <slot=5, type='float8' resno=5(y)>, <slot=0, type='text' resno=6(memo)>]}}
+         MoveVars OpCode: {Packed items[0]={MoveVars(depth=0): items=[<slot=0, offset=0x0000-67ff, type='text', expr='memo'>, <slot=1, offset=0x6800-8fff, type='int4', expr='aid'>, <slot=2, offset=0x9000-b7ff, type='int4', expr='id'>, <slot=3, offset=0xb800-11fff, type='text', expr='cat'>, <slot=4, offset=0x12000-167ff, type='float8', expr='x'>, <slot=5, offset=0x16800-1afff, type='float8', expr='y'>]}}}
+         Scan Quals OpCode: {Func(bool)::textlike args=[{Var(text): slot=0, expr='memo'}, {Const(text): value='%ab%'}]}
+         Projection OpCode: {Projection: layout=<1,2,3,4,5,0> args=[{SaveExpr: <slot=1, type='int4'> arg={Var(int4): kvec=0x6800-9000, expr='aid'}}, {SaveExpr: <slot=2, type='int4'> arg={Var(int4): kvec=0x9000-b800, expr='id'}}, {SaveExpr: <slot=3, type='text'> arg={Var(text): kvec=0xb800-12000, expr='cat'}}, {SaveExpr: <slot=4, type='float8'> arg={Var(float8): kvec=0x12000-16800, expr='x'}}, {SaveExpr: <slot=5, type='float8'> arg={Var(float8): kvec=0x16800-1b000, expr='y'}}, {SaveExpr: <slot=0, type='text'> arg={Var(text): kvec=0x0000-6800, expr='memo'}}]}
+         CUDA Stack Size: 4032
 (27 rows)
 
 SELECT * INTO test12g
